"use strict";(self.webpackChunkdoc_v_3=self.webpackChunkdoc_v_3||[]).push([[7821],{3113:(e,r,l)=>{l.r(r),l.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var n=l(4848),i=l(8453);const s={title:"Senior Block Documentation",slug:"Senior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},t=void 0,o={id:"CoDronePro_Lite/Blockly/page4",title:"Senior Block Documentation",description:"window.print()}>Print",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/CoDronePro_Lite/Blockly/page4.md",sourceDirName:"CoDronePro_Lite/Blockly",slug:"/CoDronePro_Lite/Blockly/Senior-Block-Documentation",permalink:"/ko/docs/CoDronePro_Lite/Blockly/Senior-Block-Documentation",draft:!1,unlisted:!1,editUrl:"https://github.com/RobolinkInc/doc-v3/tree/main/docs/docs/CoDronePro_Lite/Blockly/page4.md",tags:[],version:"current",frontMatter:{title:"Senior Block Documentation",slug:"Senior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},sidebar:"CoDronePro_Lite",previous:{title:"Junior Block Documentation",permalink:"/ko/docs/CoDronePro_Lite/Blockly/Junior-Block-Documentation"},next:{title:"Python",permalink:"/ko/docs/CoDronePro_Lite/Python/"}},d={},a=[{value:"Flight Commands",id:"flight-commands",level:2},{value:"takeoff()",id:"takeoff",level:3},{value:"Block",id:"block",level:4},{value:"Description",id:"description",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"land()",id:"land",level:3},{value:"Block",id:"block-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example-1",level:4},{value:"emergency_stop()",id:"emergency_stop",level:3},{value:"Block",id:"block-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Example",id:"example-2",level:4},{value:"move([duration] sec, [roll]%, [pitch]%, [yaw]%, [throttle]%)",id:"moveduration-sec-roll-pitch-yaw-throttle",level:3},{value:"Block",id:"block-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Example",id:"example-3",level:4},{value:"turn([direction], [duration] seconds, [power]%)",id:"turndirection-duration-seconds-power",level:3},{value:"Block",id:"block-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Example",id:"example-4",level:4},{value:"hover([duration] sec)",id:"hoverduration-sec",level:3},{value:"Block",id:"block-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Example",id:"example-5",level:4},{value:"Flight Variables",id:"flight-variables",level:2},{value:"set_roll([power]%)",id:"set_rollpower",level:3},{value:"Block",id:"block-6",level:4},{value:"Description",id:"description-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Example",id:"example-6",level:4},{value:"set_pitch([power]%)",id:"set_pitchpower",level:3},{value:"Block",id:"block-7",level:4},{value:"Description",id:"description-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Example",id:"example-7",level:4},{value:"set_yaw([power]%)",id:"set_yawpower",level:3},{value:"Block",id:"block-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Example",id:"example-8",level:4},{value:"set_throttle([power]%)",id:"set_throttlepower",level:3},{value:"Block",id:"block-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Example",id:"example-9",level:4},{value:"move([duration] sec)",id:"moveduration-sec",level:3},{value:"Block",id:"block-10",level:4},{value:"Description",id:"description-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Example",id:"example-10",level:4},{value:"move()",id:"move",level:3},{value:"Block",id:"block-11",level:4},{value:"Description",id:"description-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Example",id:"example-11",level:4},{value:"get_roll()",id:"get_roll",level:3},{value:"Block",id:"block-12",level:4},{value:"Description",id:"description-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Example",id:"example-12",level:4},{value:"get_pitch()",id:"get_pitch",level:3},{value:"Block",id:"block-13",level:4},{value:"Description",id:"description-13",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Example",id:"example-13",level:4},{value:"get_yaw()",id:"get_yaw",level:3},{value:"Block",id:"block-14",level:4},{value:"Description",id:"description-14",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Example",id:"example-14",level:4},{value:"get_throttle()",id:"get_throttle",level:3},{value:"Block",id:"block-15",level:4},{value:"Description",id:"description-15",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Example",id:"example-15",level:4},{value:"Status Checkers",id:"status-checkers",level:2},{value:"is_code_running()",id:"is_code_running",level:3},{value:"Block",id:"block-16",level:4},{value:"Description",id:"description-16",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Example",id:"example-16",level:4},{value:"Lights",id:"lights",level:2},{value:"arm_color([red], [green], [blue], [brightness] brightness)",id:"arm_colorred-green-blue-brightness-brightness",level:3},{value:"Block",id:"block-17",level:4},{value:"Description",id:"description-17",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Example",id:"example-17",level:4},{value:"eye_color([red], [green], [blue], [brightness] brightness)",id:"eye_colorred-green-blue-brightness-brightness",level:3},{value:"Block",id:"block-18",level:4},{value:"Description",id:"description-18",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Example",id:"example-18",level:4},{value:"arm_default_color([red], [green], [blue], [brightness] brightness)",id:"arm_default_colorred-green-blue-brightness-brightness",level:3},{value:"Block",id:"block-19",level:4},{value:"Description",id:"description-19",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Example",id:"example-19",level:4},{value:"eye_default_color([red], [green], [blue], [brightness] brightness)",id:"eye_default_colorred-green-blue-brightness-brightness",level:3},{value:"Block",id:"block-20",level:4},{value:"Description",id:"description-20",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Example",id:"example-20",level:4},{value:"arm_pattern([red], [green], [blue], [pattern], [speed] speed)",id:"arm_patternred-green-blue-pattern-speed-speed",level:3},{value:"Block",id:"block-21",level:4},{value:"Description",id:"description-21",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Example",id:"example-21",level:4},{value:"eye_pattern([red], [green], [blue], [pattern], [speed] speed)",id:"eye_patternred-green-blue-pattern-speed-speed",level:3},{value:"Block",id:"block-22",level:4},{value:"Description",id:"description-22",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Example",id:"example-22",level:4},{value:"default_eye_pattern([red], [green], [blue], [pattern], [speed] speed)",id:"default_eye_patternred-green-blue-pattern-speed-speed",level:3},{value:"Block",id:"block-23",level:4},{value:"Description",id:"description-23",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Example",id:"example-23",level:4},{value:"default_arm_pattern([red], [green], [blue], [pattern], [speed] speed)",id:"default_arm_patternred-green-blue-pattern-speed-speed",level:3},{value:"Block",id:"block-24",level:4},{value:"Description",id:"description-24",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Example",id:"example-24",level:4},{value:"arm_strobe()",id:"arm_strobe",level:3},{value:"Block",id:"block-25",level:4},{value:"Description",id:"description-25",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Example",id:"example-25",level:4},{value:"eye_strobe()",id:"eye_strobe",level:3},{value:"Block",id:"block-26",level:4},{value:"Description",id:"description-26",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Example",id:"example-26",level:4},{value:"arm_default_strobe()",id:"arm_default_strobe",level:3},{value:"Block",id:"block-27",level:4},{value:"Description",id:"description-27",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Example",id:"example-27",level:4},{value:"eye_default_strobe()",id:"eye_default_strobe",level:3},{value:"Block",id:"block-28",level:4},{value:"Description",id:"description-28",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Example",id:"example-28",level:4},{value:"arm_off()",id:"arm_off",level:3},{value:"Block",id:"block-29",level:4},{value:"Description",id:"description-29",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Example",id:"example-29",level:4},{value:"eye_off()",id:"eye_off",level:3},{value:"Block",id:"block-30",level:4},{value:"Description",id:"description-30",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Example",id:"example-30",level:4}];function c(e){const r={h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{className:"print_div",children:(0,n.jsx)("button",{id:"print_page",onClick:()=>window.print(),children:"Print"})}),"\n",(0,n.jsx)("div",{className:"change_version",children:(0,n.jsx)(r.p,{children:"version 0.0.0"})}),"\n",(0,n.jsx)(r.h2,{id:"flight-commands",children:"Flight Commands"}),"\n",(0,n.jsx)(r.h3,{id:"takeoff",children:"takeoff()"}),"\n",(0,n.jsx)(r.h4,{id:"block",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/takeoff.png"}),"\n",(0,n.jsx)(r.h4,{id:"description",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"This function makes the CoDrone take off from the ground."}),"\n",(0,n.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/takeoff_hover_land_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"land",children:"land()"}),"\n",(0,n.jsx)(r.h4,{id:"block-1",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/land.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-1",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"This function lands the CoDrone slowly."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-1",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/takeoff_hover_land_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"emergency_stop",children:"emergency_stop()"}),"\n",(0,n.jsx)(r.h4,{id:"block-2",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/emergencystop.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-2",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Stops all commands to motors. The CoDrone will stop flying immediately."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-2",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/emergencystop_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"moveduration-sec-roll-pitch-yaw-throttle",children:"move([duration] sec, [roll]%, [pitch]%, [yaw]%, [throttle]%)"}),"\n",(0,n.jsx)(r.h4,{id:"block-3",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/move.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-3",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Moves CoDrone based on the given roll, pitch, yaw, and throttle power for a given duration, in seconds."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"duration:"})," time of movement/flight",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"roll:"})," the power for the roll movement (-100 - 100)",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"pitch:"})," the power for the pitch movement (-100 - 100)",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"yaw:"})," the power for the yaw movement (-100 - 100)",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"throttle:"})," the power for the throttle (-100 - 100)",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-3",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-3",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/move_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"turndirection-duration-seconds-power",children:"turn([direction], [duration] seconds, [power]%)"}),"\n",(0,n.jsx)(r.h4,{id:"block-4",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/turn.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-4",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Turns the CoDrone to a given direction for a given duration, in seconds, at a given power/speed."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/turn_params.png"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"direction:"})," the direction of the turn",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"duration:"})," the duration of the turn",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"power:"})," the power/speed of the turn",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(r.h4,{id:"returns-4",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-4",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/turn_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"hoverduration-sec",children:"hover([duration] sec)"}),"\n",(0,n.jsx)(r.h4,{id:"block-5",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/hover.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-5",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Makes the CoDrone hover for a given duration, in seconds."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"duration:"})," duration of the hover"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-5",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-5",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_commands/takeoff_hover_land_example.png"}),"\n",(0,n.jsx)("hr",{className:"section_hr"}),"\n",(0,n.jsx)(r.h2,{id:"flight-variables",children:"Flight Variables"}),"\n",(0,n.jsx)(r.h3,{id:"set_rollpower",children:"set_roll([power]%)"}),"\n",(0,n.jsx)(r.h4,{id:"block-6",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_roll.png",width:"220px"}),"\n",(0,n.jsx)(r.h4,{id:"description-6",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"This function sets the roll direction variable but will not move the CoDrone. Negative values will move the drone to the left and positive values will move the drone to the right."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-6",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-6",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_roll_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"set_pitchpower",children:"set_pitch([power]%)"}),"\n",(0,n.jsx)(r.h4,{id:"block-7",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_pitch.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-7",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"This function sets the pitch direction variable but will not move the CoDrone. Negative values will move the drone to the backward and positive values will move the drone to the forward."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-7",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-7",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_pitch_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"set_yawpower",children:"set_yaw([power]%)"}),"\n",(0,n.jsx)(r.h4,{id:"block-8",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_yaw.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-8",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"This function sets the yaw direction variable but will not rotate the CoDrone. Negative values will rotate the drone to the left and positive values will rotate the drone to the right."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-8",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-8",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_yaw_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"set_throttlepower",children:"set_throttle([power]%)"}),"\n",(0,n.jsx)(r.h4,{id:"block-9",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_throttle.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-9",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"This function sets the throttle direction variable but will not move the CoDrone. Negative values will move the drone to the down and positive values will move the drone up."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-9",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-9",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/set_throttle_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"moveduration-sec",children:"move([duration] sec)"}),"\n",(0,n.jsx)(r.h4,{id:"block-10",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/move_sec.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-10",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Moves the CoDrone for a given duration based on the flight variable blocks preceding this block."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"duration:"})," the time of the movement"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-10",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-10",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/move_sec_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"move",children:"move()"}),"\n",(0,n.jsx)(r.h4,{id:"block-11",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/move.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-11",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Moves the CoDrone indefinitely based on the flight variable blocks preceding this block."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-11",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-11",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/move_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"get_roll",children:"get_roll()"}),"\n",(0,n.jsx)(r.h4,{id:"block-12",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_roll.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-12",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Returns the current value for the roll flight variable."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-12",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"roll:"})," the power of the roll (-100 - 100)"]}),"\n",(0,n.jsx)(r.h4,{id:"example-12",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_roll_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"get_pitch",children:"get_pitch()"}),"\n",(0,n.jsx)(r.h4,{id:"block-13",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_pitch.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-13",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Returns the current value for the pitch flight variable."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-13",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"pitch:"})," the power of the pitch (-100 - 100)"]}),"\n",(0,n.jsx)(r.h4,{id:"example-13",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_pitch_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"get_yaw",children:"get_yaw()"}),"\n",(0,n.jsx)(r.h4,{id:"block-14",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_yaw.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-14",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Returns the current value for the yaw flight variable."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-14",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"yaw:"})," the power of the yaw (-100 - 100)"]}),"\n",(0,n.jsx)(r.h4,{id:"example-14",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_yaw_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"get_throttle",children:"get_throttle()"}),"\n",(0,n.jsx)(r.h4,{id:"block-15",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_throttle.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-15",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Returns the current value for the throttle flight variable."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-15",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"throttle:"})," the power of the throttle (-100 - 100)"]}),"\n",(0,n.jsx)(r.h4,{id:"example-15",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/flight_variables/get_throttle_example.png"}),"\n",(0,n.jsx)("hr",{className:"section_hr"}),"\n",(0,n.jsx)(r.h2,{id:"status-checkers",children:"Status Checkers"}),"\n",(0,n.jsx)(r.h3,{id:"is_code_running",children:"is_code_running()"}),"\n",(0,n.jsx)(r.h4,{id:"block-16",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/status_checkers/is_code_running.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-16",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:'Returns a True value while your code is running. Use this block instead of "while True" when you want to run a "forever" loop. Use the "Stop" button in Blockly to stop the program.'}),"\n",(0,n.jsx)(r.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-16",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-16",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/status_checkers/is_code_running_example.png"}),"\n",(0,n.jsx)("hr",{className:"section_hr"}),"\n",(0,n.jsx)(r.h2,{id:"lights",children:"Lights"}),"\n",(0,n.jsx)(r.h3,{id:"arm_colorred-green-blue-brightness-brightness",children:"arm_color([red], [green], [blue], [brightness] brightness)"}),"\n",(0,n.jsx)(r.h4,{id:"block-17",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/armcolor_brightness.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-17",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets the LED color of CoDrone's arms using RGB values and their brightness with value from 1 - 100."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," Pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," Pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," Pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"brightness:"})," brightness of the LED color"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-17",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-17",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/armcolor_brightness_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"eye_colorred-green-blue-brightness-brightness",children:"eye_color([red], [green], [blue], [brightness] brightness)"}),"\n",(0,n.jsx)(r.h4,{id:"block-18",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eyecolor_brightness.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-18",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets the LED color of CoDrone's eyes using RGB values and their brightness with value from 1 - 100."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," Pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," Pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," Pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"brightness:"})," brightness of the LED color"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-18",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-18",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eyecolor_brightness_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"arm_default_colorred-green-blue-brightness-brightness",children:"arm_default_color([red], [green], [blue], [brightness] brightness)"}),"\n",(0,n.jsx)(r.h4,{id:"block-19",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_default_color.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-19",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets the default LED color of CoDrone's arms using RGB values and their brightness with value from 1 - 100, so it will remain that color even after powering off and back on."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," Pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," Pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," Pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"brightness:"})," brightness of the LED color"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-19",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-19",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_default_color_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"eye_default_colorred-green-blue-brightness-brightness",children:"eye_default_color([red], [green], [blue], [brightness] brightness)"}),"\n",(0,n.jsx)(r.h4,{id:"block-20",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_default_color.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-20",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets the default LED color of CoDrone's eyes using RGB values and their brightness with value from 1 - 100, so it will remain that color even after powering off and back on."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," Pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," Pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," Pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"brightness:"})," brightness of the LED color"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-20",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-20",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_default_color_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"arm_patternred-green-blue-pattern-speed-speed",children:"arm_pattern([red], [green], [blue], [pattern], [speed] speed)"}),"\n",(0,n.jsx)(r.h4,{id:"block-21",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_pattern.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-21",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets the LED color of CoDrone's arms using RGB values with a given pattern at a given speed"}),"\n",(0,n.jsx)(r.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_pattern_params.png"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"pattern:"})," lighting pattern of the LEDs",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"speed:"})," speed of the lighting pattern"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-21",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-21",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_pattern_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"eye_patternred-green-blue-pattern-speed-speed",children:"eye_pattern([red], [green], [blue], [pattern], [speed] speed)"}),"\n",(0,n.jsx)(r.h4,{id:"block-22",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_pattern.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-22",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets the LED color of CoDrone's eyes using RGB values with a given pattern at a given speed"}),"\n",(0,n.jsx)(r.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_pattern_params.png"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"pattern:"})," lighting pattern of the LEDs",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"speed:"})," speed of the lighting pattern"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-22",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-22",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_pattern_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"default_eye_patternred-green-blue-pattern-speed-speed",children:"default_eye_pattern([red], [green], [blue], [pattern], [speed] speed)"}),"\n",(0,n.jsx)(r.h4,{id:"block-23",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/default_eye_pattern.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-23",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets default LED color of CoDrone's eyes using RGB values with a given pattern at a given speed, which means the lights will remain in that color and pattern when powered off and back on."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/default_eye_pattern_params.png"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"pattern:"})," lighting pattern of the LEDs",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"speed:"})," speed of the lighting pattern"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-23",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-23",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/default_eye_pattern_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"default_arm_patternred-green-blue-pattern-speed-speed",children:"default_arm_pattern([red], [green], [blue], [pattern], [speed] speed)"}),"\n",(0,n.jsx)(r.h4,{id:"block-24",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/default_arm_pattern.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-24",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets default LED color of CoDrone's arms using RGB values with a given pattern at a given speed, which means the lights will remain in that color and pattern when powered off and back on."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/default_arm_pattern_params.png"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"red:"})," pixel value for the color red",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"green:"})," pixel value for the color green",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"blue:"})," pixel value for the color blue",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"pattern:"})," lighting pattern of the LEDs",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(r.strong,{children:"speed:"})," speed of the lighting pattern"]}),"\n",(0,n.jsx)(r.h4,{id:"returns-24",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-24",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/default_arm_pattern_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"arm_strobe",children:"arm_strobe()"}),"\n",(0,n.jsx)(r.h4,{id:"block-25",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_strobe.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-25",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"CoDrone turns on strobing effect for arm lights."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-25",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-25",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_strobe_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"eye_strobe",children:"eye_strobe()"}),"\n",(0,n.jsx)(r.h4,{id:"block-26",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_strobe.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-26",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"CoDrone turns on strobing effect for eye lights."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-26",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-26",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-26",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_strobe_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"arm_default_strobe",children:"arm_default_strobe()"}),"\n",(0,n.jsx)(r.h4,{id:"block-27",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_default_strobe.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-27",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets a default strobing effect for arm lights, which will still be in effect after it's turned off and on."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-27",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-27",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-27",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_default_strobe_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"eye_default_strobe",children:"eye_default_strobe()"}),"\n",(0,n.jsx)(r.h4,{id:"block-28",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_default_strobe.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-28",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Sets a default strobing effect for eye lights, which will still be in effect after it's turned off and on."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-28",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-28",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-28",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_default_strobe_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"arm_off",children:"arm_off()"}),"\n",(0,n.jsx)(r.h4,{id:"block-29",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_off.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-29",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Turns off all arm lights off."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-29",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-29",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-29",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/arm_off_example.png"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(r.h3,{id:"eye_off",children:"eye_off()"}),"\n",(0,n.jsx)(r.h4,{id:"block-30",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_off.png"}),"\n",(0,n.jsx)(r.h4,{id:"description-30",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Turns off all eye lights off."}),"\n",(0,n.jsx)(r.h4,{id:"parameters-30",children:"Parameters"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"returns-30",children:"Returns"}),"\n",(0,n.jsx)(r.p,{children:"None"}),"\n",(0,n.jsx)(r.h4,{id:"example-30",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/CDPL/blockly_docu/senior/lights/eye_off_example.png"})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,l)=>{l.d(r,{R:()=>t,x:()=>o});var n=l(6540);const i={},s=n.createContext(i);function t(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);