"use strict";(self.webpackChunkdoc_v_3=self.webpackChunkdoc_v_3||[]).push([[4732],{1668:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=r(4848),s=r(8453);const l={title:"Senior Block Documentation",slug:"Senior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},t=void 0,o={id:"Zumi/Blockly/page3",title:"Senior Block Documentation",description:"window.print()}>Print",source:"@site/docs/Zumi/Blockly/page3.md",sourceDirName:"Zumi/Blockly",slug:"/Zumi/Blockly/Senior-Block-Documentation",permalink:"/docs/Zumi/Blockly/Senior-Block-Documentation",draft:!1,unlisted:!1,editUrl:"https://github.com/RobolinkInc/doc-v3/tree/main/docs/docs/Zumi/Blockly/page3.md",tags:[],version:"current",frontMatter:{title:"Senior Block Documentation",slug:"Senior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},sidebar:"Zumi",previous:{title:"Junior Block Documentation",permalink:"/docs/Zumi/Blockly/Junior-Block-Documentation"},next:{title:"Blockly Changelog",permalink:"/docs/Zumi/Blockly/Blockly-Changelog"}},d={},c=[{value:"Driving",id:"driving",level:2},{value:"forward step",id:"forward-step",level:3},{value:"Block",id:"block",level:4},{value:"Description",id:"description",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"reverse step",id:"reverse-step",level:3},{value:"Block",id:"block-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example-1",level:4},{value:"move to coordinate",id:"move-to-coordinate",level:3},{value:"Block",id:"block-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Example",id:"example-2",level:4},{value:"reset coordinate",id:"reset-coordinate",level:3},{value:"Block",id:"block-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Example",id:"example-3",level:4},{value:"line follow gyro",id:"line-follow-gyro",level:3},{value:"Block",id:"block-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Example",id:"example-4",level:4},{value:"funnel align",id:"funnel-align",level:3},{value:"Block",id:"block-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Example",id:"example-5",level:4},{value:"forward avoid collision",id:"forward-avoid-collision",level:3},{value:"Block",id:"block-6",level:4},{value:"Description",id:"description-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Example",id:"example-6",level:4},{value:"reverse avoid collision",id:"reverse-avoid-collision",level:3},{value:"Block",id:"block-7",level:4},{value:"Description",id:"description-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Example",id:"example-7",level:4},{value:"set pid",id:"set-pid",level:3},{value:"Block",id:"block-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Example",id:"example-8",level:4},{value:"set speed prediction",id:"set-speed-prediction",level:3},{value:"Block",id:"block-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Example",id:"example-9",level:4},{value:"reset pid error",id:"reset-pid-error",level:3},{value:"Block",id:"block-10",level:4},{value:"Description",id:"description-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Example",id:"example-10",level:4},{value:"speed calibration",id:"speed-calibration",level:3},{value:"Block",id:"block-11",level:4},{value:"Description",id:"description-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Example",id:"example-11",level:4},{value:"drive over markers",id:"drive-over-markers",level:3},{value:"Block",id:"block-12",level:4},{value:"Description",id:"description-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Example",id:"example-12",level:4}];function a(e){const i={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{className:"print_div",children:(0,n.jsx)("button",{id:"print_page",onClick:()=>window.print(),children:"Print"})}),"\n",(0,n.jsx)("div",{className:"change_version",children:(0,n.jsxs)(i.p,{children:["version 0.0.0 (",(0,n.jsx)(i.a,{href:"/docs/Zumi/Blockly/Blockly-Changelog",children:"Changelog"}),")"]})}),"\n",(0,n.jsx)(i.h2,{id:"driving",children:"Driving"}),"\n",(0,n.jsx)(i.h3,{id:"forward-step",children:"forward step"}),"\n",(0,n.jsx)(i.h4,{id:"block",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/forward_step.png",width:"400px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:'Takes one drive "step" forward in the direction of the angle heading. This block must be used in a loop to observe any movement. Use the stop block at the end of the for loop to stop Zumi.'}),"\n",(0,n.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": The speed of the forward step (0 - 127)",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," angle"]}),": The angle of forward step in degrees (0 degrees is defined when the Zumi object is created)"]}),"\n",(0,n.jsx)(i.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/forward_step_example.png",width:"380px",height:"210px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"reverse-step",children:"reverse step"}),"\n",(0,n.jsx)(i.h4,{id:"block-1",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reverse_step.png",width:"400px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description-1",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:'Takes one drive "step" backward in the direction of the angle heading. This block must be used in a loop to observe any movement. Use the stop block at the end of the for loop to stop Zumi.'}),"\n",(0,n.jsx)(i.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": The speed of the reverse step (0 - 127)",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," angle"]}),": The angle of reverse step in degrees (0 degrees is defined when the Zumi object is created)"]}),"\n",(0,n.jsx)(i.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-1",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reverse_step_example.png",width:"380px",height:"220px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"move-to-coordinate",children:"move to coordinate"}),"\n",(0,n.jsx)(i.h4,{id:"block-2",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/move_to_coordinate.png",width:"445px",height:"90px"}),"\n",(0,n.jsx)(i.h4,{id:"description-2",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["Drives Zumi to an (x,y) position from the origin. The origin (0,0) is defined at Zumi object creation. To reset the origin, use the ",(0,n.jsx)(i.code,{children:"reset_coordinate()"})," block. This method uses a best fit linear approximation of the distance traveled over time. Zumi will only keep update her coordinates when driving with this block. Using any other drive command will not keep track of her location."]}),"\n",(0,n.jsx)(i.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/move_to_coordinate_params.png",width:"400px",height:"120px"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," x"]}),": The x-coordinate value ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," y"]}),": The y-coordinate value ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsx)(i.strong,{children:"unit"}),": Units of the coordinates, centimeters or inches"]}),"\n",(0,n.jsx)(i.h4,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-2",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/move_to_coordinate_example.png",width:"270px",height:"225px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"reset-coordinate",children:"reset coordinate"}),"\n",(0,n.jsx)(i.h4,{id:"block-3",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reset_coordinate.png",width:"240px",height:"85px"}),"\n",(0,n.jsx)(i.h4,{id:"description-3",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["Resets Zumi's coordinates to (0,0). The origin will be reference point when using the ",(0,n.jsx)(i.code,{children:"move_to_coordinate()"})," block."]}),"\n",(0,n.jsx)(i.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"returns-3",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-3",children:"Example"}),"\n",(0,n.jsx)(i.p,{children:"In this example, Zumi moves 5 inches in the x-direction. After resetting the coordinates Zumi will move another 5 inches in the x-direction since the origin has been reset."}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reset_coordinate_example.png",width:"440px",height:"210px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"line-follow-gyro",children:"line follow gyro"}),"\n",(0,n.jsx)(i.h4,{id:"block-4",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/line_follow_gyro.png",width:"800px",height:"90px"}),"\n",(0,n.jsx)(i.h4,{id:"description-4",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:"Uses the bottom IR sensors so that Zumi can execute a line following program for the duration of the timeout. If the bottom IR sensors detect a black line, Zumi will continue to drive forward. If one of the sensors detects white, Zumi will turn left or right to stay on the line. If both sensors detect white, Zumi will automatically stop, regardless of the timeout.The speed is capped to 80."}),"\n",(0,n.jsx)(i.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": Positive value for speed between 0 and 80 ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," duration"]}),": The duration of the timeout in seconds ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," angle_adj"]}),": The angle value, in degrees, that Zumi will turn if one IR sensor detects white.",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," left_IR"]}),": The threshold value of the bottom left IR sensor. ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," right_IR"]}),": The threshold value of the bottom right IR sensor. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(i.h4,{id:"returns-4",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-4",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/line_follow_gyro_example.png",width:"800px",height:"90px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"funnel-align",children:"funnel align"}),"\n",(0,n.jsx)(i.h4,{id:"block-5",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/funnel_align.png",width:"580px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description-5",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["Uses the bottom IR sensors so that Zumi can align to the funnel piece on the competition field for the duration of the timeout (Click ",(0,n.jsx)(i.a,{href:"https://learn.robolink.com/wp-content/uploads/2021/06/current_funnel.pdf",children:"here"})," for a PDF version of the funnel piece)."]}),"\n",(0,n.jsx)(i.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": Positive value for speed between 0 and 80 ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," duration"]}),": The duration of the timeout in seconds",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," angle_adj"]}),": The angle value, in degrees, that Zumi will turn if one IR sensor detects white."]}),"\n",(0,n.jsx)(i.h4,{id:"returns-5",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-5",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/funnel_align_example.png",width:"580px",height:"100px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"forward-avoid-collision",children:"forward avoid collision"}),"\n",(0,n.jsx)(i.h4,{id:"block-6",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/forward_avoid_collision.png",width:"810px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description-6",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:"Drives Zumi forward until an object is detected or the timeout runs out, whicever comes first. An object is considered detected if either of the front IR sensor values goes below the threshold."}),"\n",(0,n.jsx)(i.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": Positive value for speed (0 - 80) ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," duration"]}),": duration of timeout in seconds ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," angle"]}),": The angle, in degrees, at which it will turn after timeout or detection (default to None which is Zumi's current heading) ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," IR_thresh"]}),": The threshold value of front IR sensors. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(i.h4,{id:"returns-6",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-6",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/forward_avoid_collision.png",width:"810px",height:"100px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"reverse-avoid-collision",children:"reverse avoid collision"}),"\n",(0,n.jsx)(i.h4,{id:"block-7",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reverse_avoid_collision.png",width:"810px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description-7",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:"Drives Zumi in reverse until an object is detected or the timeout runs out, whicever comes first. An object is considered detected if either of the back IR sensor values goes below the threshold."}),"\n",(0,n.jsx)(i.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": Positive value for speed (0 - 80) ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," duration"]}),": duration of timeout in seconds ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," angle"]}),": The angle, in degrees, at which it will turn after timeout or detection (default to None which is Zumi's current heading) ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," IR_thresh"]}),": The threshold value of back IR sensors. ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(i.h4,{id:"returns-7",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-7",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reverse_avoid_collision.png",width:"810px",height:"100px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"set-pid",children:"set pid"}),"\n",(0,n.jsx)(i.h4,{id:"block-8",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/set_PID.png",width:"515px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description-8",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:"Sets the proportional, integral and derivative terms in a PID control system. These parameters help Zumi drive straight and make accurate turns. The default values are recommended, but can be adjusted to see how the control system works."}),"\n",(0,n.jsx)(i.p,{children:"Proportional: the output is proportional to the error\r\nIntegral: compensates for the sums of the error over time\r\nDerivative: compensates for sudden changes in the error"}),"\n",(0,n.jsx)(i.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," P"]}),": Value for proportional control ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," I"]}),": Value for integral control ",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," D"]}),": Value for derivative control ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(i.h4,{id:"returns-8",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-8",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/set_PID.png",width:"515px",height:"100px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"set-speed-prediction",children:"set speed prediction"}),"\n",(0,n.jsx)(i.h4,{id:"block-9",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/set_speed_prediction.png",width:"805px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description-9",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["Manually sets the line of best fit parameters that are used with ",(0,n.jsx)(i.code,{children:"move_to_coordinate()"}),". This block overrides any speed prediction values that were automatically set with the ",(0,n.jsx)(i.code,{children:"speed_calibration()"})," block."]}),"\n",(0,n.jsx)(i.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": The speed from (0 - 100) used for calibrating distance traveled"]}),"\n",(0,n.jsx)(i.h4,{id:"returns-9",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-9",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/set_speed_prediction.png",width:"805px",height:"100px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"reset-pid-error",children:"reset pid error"}),"\n",(0,n.jsx)(i.h4,{id:"block-10",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reset_PID_error.png",width:"200px"}),"\n",(0,n.jsx)(i.h4,{id:"description-10",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["Resets the sum of the gyro error and integral error that accumulated over. Reset the PID error after using ",(0,n.jsx)(i.code,{children:"forward_step()"})," to drive more accurately. This does not reset the P, I, and D values of the Zumi PID control. To set those parameters use ",(0,n.jsx)(i.code,{children:"set_PID()"}),"."]}),"\n",(0,n.jsx)(i.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"returns-10",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-10",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/reset_PID_error.png",width:"200px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"speed-calibration",children:"speed calibration"}),"\n",(0,n.jsx)(i.h4,{id:"block-11",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/speed_calibration.png",width:"240px"}),"\n",(0,n.jsx)(i.h4,{id:"description-11",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["This function is designed to be used with the calibration sheet (Click ",(0,n.jsx)(i.a,{href:"https://learn.robolink.com/wp-content/uploads/2021/06/calibration.pdf",children:"here"})," for a PDF version). Zumi will drive over 5 horizontal white lines that are 2 centimeters wide. The slope and y_intercept will be generated for the best fit line of the speed prediction. These values will be saved to the Zumi as a text file."]}),"\n",(0,n.jsxs)(i.p,{children:["Run this block to calibrate for ",(0,n.jsx)(i.code,{children:"move_to_coordinate()"}),"."]}),"\n",(0,n.jsx)(i.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"returns-11",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-11",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/speed_calibration.png",width:"240px"}),"\n",(0,n.jsx)("hr",{}),"\n",(0,n.jsx)(i.h3,{id:"drive-over-markers",children:"drive over markers"}),"\n",(0,n.jsx)(i.h4,{id:"block-12",children:"Block"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/drive_over_markers.png",width:"775px",height:"100px"}),"\n",(0,n.jsx)(i.h4,{id:"description-12",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["This function was designed for the ",(0,n.jsx)(i.a,{href:"https://www.robolink.com/products/zumitown-mat",children:"Zumitown Mat"}),". Zumi will drive over the specified number of alternating black and white horizontal lines at least 2 centimeters wide. Zumi will stop when the number of markers have been crossed or if the timeout ends, whichever is first. (Avoid making the speed very high, Zumi will most likely overshoot since it has a lot of speed)"]}),"\n",(0,n.jsx)(i.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," markers"]}),": An number of road markers to drive over",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," speed"]}),": Positive speed value (0 - 80)",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"integer"})," IR_threshold"]}),": An IR threshold value 0-255 for the bottom left IR sensors to detect black or white.",(0,n.jsx)("br",{}),"\r\n",(0,n.jsxs)(i.strong,{children:[(0,n.jsx)(i.em,{children:"float"})," time_out"]}),": The timeout value in seconds",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(i.h4,{id:"returns-12",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:"None"}),"\n",(0,n.jsx)(i.h4,{id:"example-12",children:"Example"}),"\n",(0,n.jsx)("img",{src:"/img/Zumi/blockly_docu/senior/driving/drive_over_markers.png",width:"775px",height:"100px"})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>t,x:()=>o});var n=r(6540);const s={},l=n.createContext(s);function t(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),n.createElement(l.Provider,{value:i},e.children)}}}]);