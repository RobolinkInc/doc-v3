"use strict";(self.webpackChunkdoc_v_3=self.webpackChunkdoc_v_3||[]).push([[56],{6100:(e,l,r)=>{r.r(l),r.d(l,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>t,toc:()=>a});var i=r(5893),s=r(1151);const n={title:"Offline App Documentation",hide_title:!0,customHeadElements:['<link rel="manifest" href="manifest.json" />']},d=void 0,t={id:"CoDroneEDU/Blockly/page2",title:"Offline App Documentation",description:"Flight Commands",source:"@site/docs/CoDroneEDU/Blockly/page2.md",sourceDirName:"CoDroneEDU/Blockly",slug:"/CoDroneEDU/Blockly/page2",permalink:"/ja/docs/CoDroneEDU/Blockly/page2",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CoDroneEDU/Blockly/page2.md",tags:[],version:"current",frontMatter:{title:"Offline App Documentation",hide_title:!0,customHeadElements:['<link rel="manifest" href="manifest.json" />']},sidebar:"CoDroneEDU",previous:{title:"What is Blockly?",permalink:"/ja/docs/CoDroneEDU/Blockly/page1"},next:{title:"Block Documentation",permalink:"/ja/docs/CoDroneEDU/Blockly/page3"}},o={},a=[{value:"Flight Commands",id:"flight-commands",level:2},{value:"take_off()",id:"take_off",level:3},{value:"Block",id:"block",level:4},{value:"Code",id:"code",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Description",id:"description",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"land()",id:"land",level:3},{value:"Block",id:"block-1",level:4},{value:"Code",id:"code-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example-1",level:4},{value:"emergency_stop()",id:"emergency_stop",level:3},{value:"Block",id:"block-2",level:4},{value:"Code",id:"code-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Example",id:"example-2",level:4},{value:"hover()",id:"hover",level:3},{value:"Block",id:"block-3",level:4},{value:"Code",id:"code-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Example",id:"example-3",level:4},{value:"move()",id:"move",level:3},{value:"Block",id:"block-4",level:4},{value:"Code",id:"code-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Example",id:"example-4",level:4},{value:"flip()",id:"flip",level:3},{value:"Block",id:"block-5",level:4},{value:"Code",id:"code-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Example",id:"example-5",level:4},{value:"turn_degree()",id:"turn_degree",level:3},{value:"Block",id:"block-6",level:4},{value:"Code",id:"code-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Description",id:"description-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Example",id:"example-6",level:4},{value:"turn_left() / turn_right()",id:"turn_left--turn_right",level:3},{value:"Block",id:"block-7",level:4},{value:"Code",id:"code-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Description",id:"description-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Example",id:"example-7",level:4},{value:"avoid_wall()",id:"avoid_wall",level:3},{value:"Block",id:"block-8",level:4},{value:"Code",id:"code-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Example",id:"example-8",level:4},{value:"Flight Variables",id:"flight-variables",level:2},{value:"set_roll()",id:"set_roll",level:3},{value:"Block",id:"block-9",level:4},{value:"Code",id:"code-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Example",id:"example-9",level:4},{value:"set_pitch()",id:"set_pitch",level:3},{value:"Block",id:"block-10",level:4},{value:"Code",id:"code-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Description",id:"description-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Example",id:"example-10",level:4},{value:"set_yaw()",id:"set_yaw",level:3},{value:"Block",id:"block-11",level:4},{value:"Code",id:"code-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Description",id:"description-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Example",id:"example-11",level:4},{value:"set_throttle()",id:"set_throttle",level:3},{value:"Block",id:"block-12",level:4},{value:"Code",id:"code-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Description",id:"description-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Example",id:"example-12",level:4},{value:"move()",id:"move-1",level:3},{value:"Block",id:"block-13",level:4},{value:"Code",id:"code-13",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Description",id:"description-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Example",id:"example-13",level:4},{value:"move(duration)",id:"moveduration",level:3},{value:"Block",id:"block-14",level:4},{value:"Code",id:"code-14",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Description",id:"description-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Example",id:"example-14",level:4},{value:"set_trim()",id:"set_trim",level:3},{value:"Block",id:"block-15",level:4},{value:"Code",id:"code-15",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Description",id:"description-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Example",id:"example-15",level:4},{value:"get_trim()",id:"get_trim",level:3},{value:"Block",id:"block-16",level:4},{value:"Code",id:"code-16",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Description",id:"description-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Example",id:"example-16",level:4},{value:"reset_trim()",id:"reset_trim",level:3},{value:"Block",id:"block-17",level:4},{value:"Code",id:"code-17",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Description",id:"description-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Example",id:"example-17",level:4},{value:"Status Checkers",id:"status-checkers",level:2},{value:"code_is_running()",id:"code_is_running",level:3},{value:"Block",id:"block-18",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Description",id:"description-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Example",id:"example-18",level:4},{value:"Lights",id:"lights",level:2},{value:"set_drone_LED()",id:"set_drone_led",level:3},{value:"Block",id:"block-19",level:4},{value:"Code",id:"code-18",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Description",id:"description-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Example",id:"example-19",level:4},{value:"drone_LED_off()",id:"drone_led_off",level:3},{value:"Block",id:"block-20",level:4},{value:"Code",id:"code-19",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Description",id:"description-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Example",id:"example-20",level:4},{value:"set_controller_LED()",id:"set_controller_led",level:3},{value:"Block",id:"block-21",level:4},{value:"Code",id:"code-20",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Description",id:"description-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Example",id:"example-21",level:4},{value:"controller_LED_off()",id:"controller_led_off",level:3},{value:"Block",id:"block-22",level:4},{value:"Code",id:"code-21",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Description",id:"description-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Example",id:"example-22",level:4},{value:"Sensors",id:"sensors",level:2},{value:"get_range()",id:"get_range",level:3},{value:"get_angle()",id:"get_angle",level:3},{value:"get_angular_speed()",id:"get_angular_speed",level:3},{value:"get_accel()",id:"get_accel",level:3},{value:"get_pos()",id:"get_pos",level:3},{value:"get_battery()",id:"get_battery",level:3},{value:"get_height()",id:"get_height",level:3},{value:"get_pressure()",id:"get_pressure",level:3},{value:"get_temperature()",id:"get_temperature",level:3},{value:"get_elevation()",id:"get_elevation",level:3},{value:"get_color()",id:"get_color",level:3},{value:"get_hsvl()",id:"get_hsvl",level:3},{value:"get_state_data()",id:"get_state_data",level:3},{value:"reset_sensor()",id:"reset_sensor",level:3},{value:"Sound",id:"sound",level:2},{value:"drone_buzzer()",id:"drone_buzzer",level:3},{value:"controller_buzzer()",id:"controller_buzzer",level:3},{value:"drone_buzzer_hertz()",id:"drone_buzzer_hertz",level:3},{value:"controller_buzzer_hertz()",id:"controller_buzzer_hertz",level:3},{value:"Screen",id:"screen",level:2},{value:"controller_draw_line()",id:"controller_draw_line",level:3},{value:"controller_draw_string()",id:"controller_draw_string",level:3},{value:"controller_draw_rectangle()",id:"controller_draw_rectangle",level:3},{value:"controller_draw_square()",id:"controller_draw_square",level:3},{value:"controller_draw_point()",id:"controller_draw_point",level:3},{value:"controller_draw_image()",id:"controller_draw_image",level:3},{value:"controller_clear_screen()",id:"controller_clear_screen",level:3}];function c(e){const l={br:"br",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)("div",{className:"level3_body",children:[(0,i.jsx)(l.h2,{id:"flight-commands",children:"Flight Commands"}),(0,i.jsx)(l.h3,{id:"take_off",children:"take_off()"}),(0,i.jsx)(l.h4,{id:"block",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off.png",width:"120px"}),(0,i.jsx)(l.h4,{id:"code",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"takeoff()"}),(0,i.jsx)(l.h4,{id:"parameters",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description",children:"Description"}),(0,i.jsx)(l.p,{children:"This functions makes the drone take off. CoDrone EDU takes off at an average height of 1 meter off the ground. A takeoff block must be used before any other flight command or flight movement."}),(0,i.jsx)(l.h4,{id:"returns",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off_hover_land.png",width:"240px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"land",children:"land()"}),(0,i.jsx)(l.h4,{id:"block-1",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/land.png",width:"120px"}),(0,i.jsx)(l.h4,{id:"code-1",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"land()"}),(0,i.jsx)(l.h4,{id:"parameters-1",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description-1",children:"Description"}),(0,i.jsx)(l.p,{children:"This function makes the drone land by throttling down safely."}),(0,i.jsx)(l.h4,{id:"returns-1",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-1",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off_hover_land.png",width:"240px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"emergency_stop",children:"emergency_stop()"}),(0,i.jsx)(l.h4,{id:"block-2",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/emergencystop.png",width:"160px"}),(0,i.jsx)(l.h4,{id:"code-2",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"emergency_stop()"}),(0,i.jsx)(l.h4,{id:"parameters-2",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description-2",children:"Description"}),(0,i.jsx)(l.p,{children:"Stops all commands to motors. The drone will stop flying immediately."}),(0,i.jsx)(l.h4,{id:"returns-2",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-2",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/emergency_stop_example.png",width:"150px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"hover",children:"hover()"}),(0,i.jsx)(l.h4,{id:"block-3",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/hover.png",width:"150px"}),(0,i.jsx)(l.h4,{id:"code-3",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"hover()"}),(0,i.jsx)(l.h4,{id:"parameters-3",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"duration:"})," positive integer in seconds"]}),(0,i.jsx)(l.h4,{id:"description-3",children:"Description"}),(0,i.jsx)(l.p,{children:"This function makes the drone hover in place for a duration in seconds."}),(0,i.jsx)(l.h4,{id:"returns-3",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-3",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off_hover_land.png",width:"240px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"move",children:"move()"}),(0,i.jsx)(l.h4,{id:"block-4",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move.png",width:"460px"}),(0,i.jsx)(l.h4,{id:"code-4",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"move()"}),(0,i.jsx)(l.h4,{id:"parameters-4",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"roll:"})," roll power percentage as an integer between -100 and +100",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"pitch:"})," pitch power percentage as an integer between -100 and +100",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"yaw:"})," yaw power percentage as an integer between -100 and +100",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"throttle:"})," throttle power percentage as an integer between -100 and +100",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"duration:"})," positive integer in seconds"]}),(0,i.jsx)(l.h4,{id:"description-4",children:"Description"}),(0,i.jsx)(l.p,{children:"Moves the drone for a certain amount of time (in seconds) in a given direction determined by the flight parameters."}),(0,i.jsx)(l.h4,{id:"returns-4",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-4",children:"Example"}),(0,i.jsx)(l.p,{children:"In this example, roll and pitch are both set to positive 30% while yaw and throttle remain at 0%. CoDrone EDU will fly forward and to the right (diagonally) for 1 second at 30% speed."}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move-example.png",width:"480px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"flip",children:"flip()"}),(0,i.jsx)(l.h4,{id:"block-5",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/flip.png",width:"180px"}),(0,i.jsx)(l.h4,{id:"code-5",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"flip()"}),(0,i.jsx)(l.h4,{id:"parameters-5",children:"Parameters"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/flip_params.png",width:"180px"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"direction:"})," backward, forward, right, left"]}),(0,i.jsx)(l.h4,{id:"description-5",children:"Description"}),(0,i.jsx)(l.p,{children:"This functions makes the drone flip backward, forward, right, or left. Make sure your battery percentage is over 50% for the flip to execute."}),(0,i.jsx)(l.h4,{id:"returns-5",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-5",children:"Example"}),(0,i.jsx)(l.p,{children:"Add a hover or delay block after the flip if you need to stabilize before your next command. The drone takes 3-4 seconds after a flip before it can do another flight command."}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/flip_example.png",width:"500px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"turn_degree",children:"turn_degree()"}),(0,i.jsx)(l.h4,{id:"block-6",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree.png",width:"200px"}),(0,i.jsx)(l.h4,{id:"code-6",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"turn_degree()"}),(0,i.jsx)(l.h4,{id:"parameters-6",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"degrees:"})," integer from -180 to +180"]}),(0,i.jsx)(l.h4,{id:"description-6",children:"Description"}),(0,i.jsx)(l.p,{children:"Turns right or left with absolute reference frame to drone's initial heading. Positive degrees turn to right and negative degrees turn to the left. When the drone pairs after powering on, the current heading will be set as 0 degrees."}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/CDE_heading.jpg",width:"300px"}),(0,i.jsx)(l.h4,{id:"returns-6",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-6",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree_example.png",width:"240px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"turn_left--turn_right",children:"turn_left() / turn_right()"}),(0,i.jsx)(l.h4,{id:"block-7",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree.png",width:"210px"}),(0,i.jsx)(l.h4,{id:"code-7",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"turn_left()"}),(0,i.jsx)("br",{}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"turn_right()"}),(0,i.jsx)(l.h4,{id:"parameters-7",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"degrees:"})," positive integer from 0 to 180"]}),(0,i.jsx)(l.h4,{id:"description-7",children:"Description"}),(0,i.jsx)(l.p,{children:"Turns right or left relative to the drone's current heading."}),(0,i.jsx)(l.h4,{id:"returns-7",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-7",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree_example.png",width:"240px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"avoid_wall",children:"avoid_wall()"}),(0,i.jsx)(l.h4,{id:"block-8",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/avoid_wall.png",width:"260px"}),(0,i.jsx)(l.h4,{id:"code-8",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"avoid_wall()"}),(0,i.jsx)(l.h4,{id:"parameters-8",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"timeout:"})," positive integer timeout duration in seconds",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"distance:"})," positive integer in centimeters"]}),(0,i.jsx)(l.h4,{id:"description-8",children:"Description"}),(0,i.jsx)(l.p,{children:"CoDrone EDU will fly forward and stop when an obstacle is detected a given distance away (in centimeters). The block will run until the timeout (in seconds) is finished or the obstacle is found, whichever comes first. The default timeout is 10 seconds for an obstacle detected 20cm away."}),(0,i.jsx)(l.h4,{id:"returns-8",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-8",children:"Example"}),(0,i.jsx)(l.p,{children:"Place the drone on the floor a few feet away from a wall. When you run the code, the drone will fly forward until the wall is detected 30 centimeters away. The next block will immediately execute. In this case, the drone will land."}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/avoid_wall_example.png",width:"280px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h2,{id:"flight-variables",children:"Flight Variables"}),(0,i.jsx)(l.h3,{id:"set_roll",children:"set_roll()"}),(0,i.jsx)(l.h4,{id:"block-9",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_roll.png",width:"180px"}),(0,i.jsx)(l.h4,{id:"code-9",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"set_roll()"}),(0,i.jsx)(l.h4,{id:"parameters-9",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"power:"})," integer between -100 and 100"]}),(0,i.jsx)(l.h4,{id:"description-9",children:"Description"}),(0,i.jsx)(l.p,{children:"This function sets the roll direction variable but will not send a move command. Negative values will move the drone to the left and positive values will move the drone to the right."}),(0,i.jsx)(l.h4,{id:"returns-9",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-9",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_roll_example.png",width:"180px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"set_pitch",children:"set_pitch()"}),(0,i.jsx)(l.h4,{id:"block-10",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_pitch.png",width:"180px"}),(0,i.jsx)(l.h4,{id:"code-10",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"set_pitch()"}),(0,i.jsx)(l.h4,{id:"parameters-10",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"power:"})," integer between -100 and 100"]}),(0,i.jsx)(l.h4,{id:"description-10",children:"Description"}),(0,i.jsx)(l.p,{children:"This function sets the pitch direction variable but will not send a move command. Negative values will move the drone backward and positive values will move the drone forward."}),(0,i.jsx)(l.h4,{id:"returns-10",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-10",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_pitch_example.png",width:"180px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"set_yaw",children:"set_yaw()"}),(0,i.jsx)(l.h4,{id:"block-11",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_yaw.png",width:"180px"}),(0,i.jsx)(l.h4,{id:"code-11",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"set_yaw()"}),(0,i.jsx)(l.h4,{id:"parameters-11",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"power:"})," integer between -100 and 100"]}),(0,i.jsx)(l.h4,{id:"description-11",children:"Description"}),(0,i.jsx)(l.p,{children:"This function sets the yaw direction variable but will not send a move command. Negative values will turn the drone to the right and positive values will turn the drone to the left."}),(0,i.jsx)(l.h4,{id:"returns-11",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-11",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_yaw_example.png",width:"180px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"set_throttle",children:"set_throttle()"}),(0,i.jsx)(l.h4,{id:"block-12",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_throttle.png",width:"240px"}),(0,i.jsx)(l.h4,{id:"code-12",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"set_throttle()"}),(0,i.jsx)(l.h4,{id:"parameters-12",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"power:"})," integer between -100 and 100"]}),(0,i.jsx)(l.h4,{id:"description-12",children:"Description"}),(0,i.jsx)(l.p,{children:"This function sets the throttle direction variable but will not send a move command. Negative values will move the drone downward and positive values will move the drone upward."}),(0,i.jsx)(l.h4,{id:"returns-12",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-12",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_throttle_example.png",width:"240px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"move-1",children:"move()"}),(0,i.jsx)(l.h4,{id:"block-13",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_no_params.png",width:"80px"}),(0,i.jsx)(l.h4,{id:"code-13",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"move()"}),(0,i.jsx)(l.h4,{id:"parameters-13",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description-13",children:"Description"}),(0,i.jsx)(l.p,{children:"Moves CoDrone EDU in the direction set by the flight variables with the smallest duration possible (about 0.01 seconds). Since it has no specified duration, it is often used inside of a loop to check sensors simultaneously."}),(0,i.jsx)(l.h4,{id:"returns-13",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-13",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_no_params_example.png",width:"400px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"moveduration",children:"move(duration)"}),(0,i.jsx)(l.h4,{id:"block-14",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_with_params.png",width:"160px"}),(0,i.jsx)(l.h4,{id:"code-14",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"move()"}),(0,i.jsx)(l.h4,{id:"parameters-14",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"duration:"})," positive integer in seconds"]}),(0,i.jsx)(l.h4,{id:"description-14",children:"Description"}),(0,i.jsx)(l.p,{children:"Moves CoDrone EDU for a duration in seconds in the direction set by the flight variables."}),(0,i.jsx)(l.h4,{id:"returns-14",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-14",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_with_params_example.png",width:"200px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"set_trim",children:"set_trim()"}),(0,i.jsx)(l.h4,{id:"block-15",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_trim.png",width:"240px"}),(0,i.jsx)(l.h4,{id:"code-15",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"set_trim()"}),(0,i.jsx)(l.h4,{id:"parameters-15",children:"Parameters"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_trim_params.png",width:"280px"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"roll:"})," integer between -100 and 100",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"pitch:"})," integer between -100 and 100"]}),(0,i.jsx)(l.h4,{id:"description-15",children:"Description"}),(0,i.jsx)(l.p,{children:"Sets the trim values to adjust for any drifting while CoDrone EDU is flying. Set the trim values in the opposite direction of drift. For example, if the drone is drifting to the right, set roll to a negative value."}),(0,i.jsx)(l.h4,{id:"returns-15",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-15",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_trim_example.png",width:"280px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"get_trim",children:"get_trim()"}),(0,i.jsx)(l.h4,{id:"block-16",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_trim.png",width:"120px"}),(0,i.jsx)(l.h4,{id:"code-16",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"get_trim()"}),(0,i.jsx)(l.h4,{id:"parameters-16",children:"Parameters"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"roll:"})," integer between -100 and 100",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"pitch:"})," integer between -100 and 100"]}),(0,i.jsx)(l.h4,{id:"description-16",children:"Description"}),(0,i.jsx)(l.p,{children:"Returns the current trim values. Combine with a print statement to see the results printed to the console."}),(0,i.jsx)(l.h4,{id:"returns-16",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-16",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_trim_example.png",width:"280px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"reset_trim",children:"reset_trim()"}),(0,i.jsx)(l.h4,{id:"block-17",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/reset_trim.png",width:"120px"}),(0,i.jsx)(l.h4,{id:"code-17",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"reset_trim()"}),(0,i.jsx)(l.h4,{id:"parameters-17",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description-17",children:"Description"}),(0,i.jsx)(l.p,{children:"Resets the trim values to (0,0)."}),(0,i.jsx)(l.h4,{id:"returns-17",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-17",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/reset_trim_example.png",width:"280px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h2,{id:"status-checkers",children:"Status Checkers"}),(0,i.jsx)(l.h3,{id:"code_is_running",children:"code_is_running()"}),(0,i.jsx)(l.h4,{id:"block-18",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/code_is_running.png",width:"160px"}),(0,i.jsx)(l.h4,{id:"parameters-18",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description-18",children:"Description"}),(0,i.jsxs)(l.p,{children:['Returns a True value while your code is running. Use this block instead of "while True" when you want to run a "forever" loop. Use the "Stop" button in Blockly to stop the program.',(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"Note:"})," There is no Python equivalent code_is_running() function. Use a while True loop in Python."]}),(0,i.jsx)(l.h4,{id:"returns-18",children:"Returns"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"Boolean:"}),' returns true if program is running, false if user presses "Stop"']}),(0,i.jsx)(l.h4,{id:"example-18",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/code_is_running_example.png",width:"500px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h2,{id:"lights",children:"Lights"}),(0,i.jsx)(l.h3,{id:"set_drone_led",children:"set_drone_LED()"}),(0,i.jsx)(l.h4,{id:"block-19",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_drone_led.png",width:"450px"}),(0,i.jsx)(l.h4,{id:"code-18",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"set_drone_LED()"}),(0,i.jsx)(l.h4,{id:"parameters-19",children:"Parameters"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_drone_led_params.png",width:"500px"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"red:"})," positive integer between 0 and 255",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"green:"})," positive integer between 0 and 255",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"blue:"})," positive integer between 0 and 255",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"brightness:"})," positive between 0 and 255"]}),(0,i.jsx)(l.h4,{id:"description-19",children:"Description"}),(0,i.jsx)(l.p,{children:"Sets the color of CoDrone EDU's LED. Colors are set by using its RGB (red, green, blue) equivalent values."}),(0,i.jsx)(l.h4,{id:"returns-19",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-19",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_drone_led_example.png",width:"500px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"drone_led_off",children:"drone_LED_off()"}),(0,i.jsx)(l.h4,{id:"block-20",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_led_off.png",width:"150px"}),(0,i.jsx)(l.h4,{id:"code-19",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"drone_LED_off()"}),(0,i.jsx)(l.h4,{id:"parameters-20",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description-20",children:"Description"}),(0,i.jsx)(l.p,{children:"Turns off CoDrone EDU's LED."}),(0,i.jsx)(l.h4,{id:"returns-20",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-20",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_led_off_example.png",width:"480px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"set_controller_led",children:"set_controller_LED()"}),(0,i.jsx)(l.h4,{id:"block-21",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_controller_led.png",width:"450px"}),(0,i.jsx)(l.h4,{id:"code-20",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"set_controller_LED()"}),(0,i.jsx)(l.h4,{id:"parameters-21",children:"Parameters"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_controller_led_params.png",width:"500px"}),(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"red:"})," positive integer between 0 and 255",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"green:"})," positive integer between 0 and 255",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"blue:"})," positive integer between 0 and 255",(0,i.jsx)(l.br,{}),"\n",(0,i.jsx)(l.strong,{children:"brightness:"})," positive integer between 0 and 255"]}),(0,i.jsx)(l.h4,{id:"description-21",children:"Description"}),(0,i.jsx)(l.p,{children:"Sets the color of CoDrone EDU's controller LED. Colors are set by using its RGB (red, green, blue) equivalent values."}),(0,i.jsx)(l.h4,{id:"returns-21",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-21",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_controller_led_example.png",width:"500px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h3,{id:"controller_led_off",children:"controller_LED_off()"}),(0,i.jsx)(l.h4,{id:"block-22",children:"Block"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_led_off.png",width:"180px"}),(0,i.jsx)(l.h4,{id:"code-21",children:"Code"}),(0,i.jsx)("span",{className:"light_gray",children:"drone."}),(0,i.jsx)("span",{className:"dark_gray",children:"controller_LED_off()"}),(0,i.jsx)(l.h4,{id:"parameters-22",children:"Parameters"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"description-22",children:"Description"}),(0,i.jsx)(l.p,{children:"Turns off the CoDrone EDU's controller LED."}),(0,i.jsx)(l.h4,{id:"returns-22",children:"Returns"}),(0,i.jsx)(l.p,{children:"None"}),(0,i.jsx)(l.h4,{id:"example-22",children:"Example"}),(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_led_off_example.png",width:"480px"}),(0,i.jsx)("hr",{}),(0,i.jsx)(l.h2,{id:"sensors",children:"Sensors"}),(0,i.jsx)(l.h3,{id:"get_range",children:"get_range()"}),(0,i.jsx)(l.h3,{id:"get_angle",children:"get_angle()"}),(0,i.jsx)(l.h3,{id:"get_angular_speed",children:"get_angular_speed()"}),(0,i.jsx)(l.h3,{id:"get_accel",children:"get_accel()"}),(0,i.jsx)(l.h3,{id:"get_pos",children:"get_pos()"}),(0,i.jsx)(l.h3,{id:"get_battery",children:"get_battery()"}),(0,i.jsx)(l.h3,{id:"get_height",children:"get_height()"}),(0,i.jsx)(l.h3,{id:"get_pressure",children:"get_pressure()"}),(0,i.jsx)(l.h3,{id:"get_temperature",children:"get_temperature()"}),(0,i.jsx)(l.h3,{id:"get_elevation",children:"get_elevation()"}),(0,i.jsx)(l.h3,{id:"get_color",children:"get_color()"}),(0,i.jsx)(l.h3,{id:"get_hsvl",children:"get_hsvl()"}),(0,i.jsx)(l.h3,{id:"get_state_data",children:"get_state_data()"}),(0,i.jsx)(l.h3,{id:"reset_sensor",children:"reset_sensor()"}),(0,i.jsx)(l.h2,{id:"sound",children:"Sound"}),(0,i.jsx)(l.h3,{id:"drone_buzzer",children:"drone_buzzer()"}),(0,i.jsx)(l.h3,{id:"controller_buzzer",children:"controller_buzzer()"}),(0,i.jsx)(l.h3,{id:"drone_buzzer_hertz",children:"drone_buzzer_hertz()"}),(0,i.jsx)(l.h3,{id:"controller_buzzer_hertz",children:"controller_buzzer_hertz()"}),(0,i.jsx)(l.h2,{id:"screen",children:"Screen"}),(0,i.jsx)(l.h3,{id:"controller_draw_line",children:"controller_draw_line()"}),(0,i.jsx)(l.h3,{id:"controller_draw_string",children:"controller_draw_string()"}),(0,i.jsx)(l.h3,{id:"controller_draw_rectangle",children:"controller_draw_rectangle()"}),(0,i.jsx)(l.h3,{id:"controller_draw_square",children:"controller_draw_square()"}),(0,i.jsx)(l.h3,{id:"controller_draw_point",children:"controller_draw_point()"}),(0,i.jsx)(l.h3,{id:"controller_draw_image",children:"controller_draw_image()"}),(0,i.jsx)(l.h3,{id:"controller_clear_screen",children:"controller_clear_screen()"})]})}function h(e={}){const{wrapper:l}={...(0,s.a)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,l,r)=>{r.d(l,{Z:()=>t,a:()=>d});var i=r(7294);const s={},n=i.createContext(s);function d(e){const l=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function t(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(n.Provider,{value:l},e.children)}}}]);