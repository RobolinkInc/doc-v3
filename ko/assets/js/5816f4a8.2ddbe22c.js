"use strict";(self.webpackChunkdoc_v_3=self.webpackChunkdoc_v_3||[]).push([[3540],{3422:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var l=r(4848),i=r(8453);const s={title:"Senior Block Documentation",slug:"Senior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},t=void 0,o={id:"CoDroneMini/Blockly/page4",title:"Senior Block Documentation",description:"window.print()}>Print",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/CoDroneMini/Blockly/page4.md",sourceDirName:"CoDroneMini/Blockly",slug:"/CoDroneMini/Blockly/Senior-Block-Documentation",permalink:"/ko/docs/CoDroneMini/Blockly/Senior-Block-Documentation",draft:!1,unlisted:!1,editUrl:"https://github.com/RobolinkInc/doc-v3/tree/main/docs/docs/CoDroneMini/Blockly/page4.md",tags:[],version:"current",frontMatter:{title:"Senior Block Documentation",slug:"Senior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},sidebar:"CoDroneMini",previous:{title:"Junior Block Documentation",permalink:"/ko/docs/CoDroneMini/Blockly/Junior-Block-Documentation"},next:{title:"Blockly Changelog",permalink:"/ko/docs/CoDroneMini/Blockly/Blockly-Changelog"}},d={},c=[{value:"Flight Commands",id:"flight-commands",level:2},{value:"take off",id:"take-off",level:3},{value:"Block",id:"block",level:4},{value:"Description",id:"description",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"land",id:"land",level:3},{value:"Block",id:"block-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example-1",level:4},{value:"emergency stop",id:"emergency-stop",level:3},{value:"Block",id:"block-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Example",id:"example-2",level:4},{value:"move([duration] seconds, [roll] %, [pitch] %, [yaw] %, [throttle] %)",id:"moveduration-seconds-roll--pitch--yaw--throttle-",level:3},{value:"Block",id:"block-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Example",id:"example-3",level:4},{value:"turn([direction] , [duration] seconds, [power] %)",id:"turndirection--duration-seconds-power-",level:3},{value:"Block",id:"block-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Example",id:"example-4",level:4},{value:"hover([seconds] sec)",id:"hoverseconds-sec",level:3},{value:"Block",id:"block-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Example",id:"example-5",level:4},{value:"Flight Variables",id:"flight-variables",level:2},{value:"set_roll()",id:"set_roll",level:3},{value:"Block",id:"block-6",level:4},{value:"Description",id:"description-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Exmaple",id:"exmaple",level:4},{value:"set_pitch()",id:"set_pitch",level:3},{value:"Block",id:"block-7",level:4},{value:"Description",id:"description-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Example",id:"example-6",level:4},{value:"set_yaw()",id:"set_yaw",level:3},{value:"Block",id:"block-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Example",id:"example-7",level:4},{value:"set_throttle()",id:"set_throttle",level:3},{value:"Block",id:"block-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Example",id:"example-8",level:4},{value:"move(duration)",id:"moveduration",level:3},{value:"Block",id:"block-10",level:4},{value:"Description",id:"description-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Example",id:"example-9",level:4},{value:"move()",id:"move",level:3},{value:"Block",id:"block-11",level:4},{value:"Description",id:"description-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Example",id:"example-10",level:4},{value:"set_trim()",id:"set_trim",level:3},{value:"Block",id:"block-12",level:4},{value:"Description",id:"description-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Example",id:"example-11",level:4},{value:"get_trim()",id:"get_trim",level:3},{value:"Block",id:"block-13",level:4},{value:"Description",id:"description-13",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Example",id:"example-12",level:4},{value:"reset_trim()",id:"reset_trim",level:3},{value:"Block",id:"block-14",level:4},{value:"Description",id:"description-14",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Example",id:"example-13",level:4},{value:"get_roll()",id:"get_roll",level:3},{value:"Block",id:"block-15",level:4},{value:"Description",id:"description-15",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Example",id:"example-14",level:4},{value:"get_pitch()",id:"get_pitch",level:3},{value:"Block",id:"block-16",level:4},{value:"Description",id:"description-16",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Example",id:"example-15",level:4},{value:"get_yaw()",id:"get_yaw",level:3},{value:"Block",id:"block-17",level:4},{value:"Description",id:"description-17",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Example",id:"example-16",level:4},{value:"get_throttle()",id:"get_throttle",level:3},{value:"Block",id:"block-18",level:4},{value:"Description",id:"description-18",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Example",id:"example-17",level:4},{value:"Status Checkers",id:"status-checkers",level:2},{value:"code_is_running()",id:"code_is_running",level:3},{value:"Block",id:"block-19",level:4},{value:"Description",id:"description-19",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Example",id:"example-18",level:4},{value:"Sensors",id:"sensors",level:2},{value:"get_angle()",id:"get_angle",level:3},{value:"Block",id:"block-20",level:4},{value:"Description",id:"description-20",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Example",id:"example-19",level:4},{value:"get_angle()",id:"get_angle-1",level:3},{value:"Block",id:"block-21",level:4},{value:"Description",id:"description-21",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Example",id:"example-20",level:4},{value:"get_drone_temp()",id:"get_drone_temp",level:3},{value:"Block",id:"block-22",level:4},{value:"Description",id:"description-22",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Example",id:"example-21",level:4},{value:"get_height()",id:"get_height",level:3},{value:"Block",id:"block-23",level:4},{value:"Description",id:"description-23",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Example",id:"example-22",level:4},{value:"get_pressure()",id:"get_pressure",level:3},{value:"Block",id:"block-24",level:4},{value:"Description",id:"description-24",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Example",id:"example-23",level:4},{value:"reset_sensor()",id:"reset_sensor",level:3},{value:"Block",id:"block-25",level:4},{value:"Description",id:"description-25",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Example",id:"example-24",level:4},{value:"Lights",id:"lights",level:2},{value:"LED_color()",id:"led_color",level:3},{value:"Block",id:"block-26",level:4},{value:"Description",id:"description-26",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Example",id:"example-25",level:4},{value:"LED_color(r,g,b,brightness)",id:"led_colorrgbbrightness",level:3},{value:"Block",id:"block-27",level:4},{value:"Description",id:"description-27",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Example",id:"example-26",level:4},{value:"turn_off_LED()",id:"turn_off_led",level:3},{value:"Block",id:"block-28",level:4},{value:"Description",id:"description-28",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Example",id:"example-27",level:4},{value:"reset_LED()",id:"reset_led",level:3},{value:"Block",id:"block-29",level:4},{value:"Description",id:"description-29",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Example",id:"example-28",level:4},{value:"Sound",id:"sound",level:2},{value:"play_note(note, [duration] seconds)",id:"play_notenote-duration-seconds",level:3},{value:"Block",id:"block-30",level:4},{value:"Description",id:"description-30",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Example",id:"example-29",level:4},{value:"play_note([frequency] Hertz, [duration] seconds)",id:"play_notefrequency-hertz-duration-seconds",level:3},{value:"Block",id:"block-31",level:4},{value:"Description",id:"description-31",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Example",id:"example-30",level:4}];function a(e){const n={em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{className:"print_div",children:(0,l.jsx)("button",{id:"print_page",onClick:()=>window.print(),children:"Print"})}),"\n",(0,l.jsx)(n.h2,{id:"flight-commands",children:"Flight Commands"}),"\n",(0,l.jsx)(n.h3,{id:"take-off",children:"take off"}),"\n",(0,l.jsx)(n.h4,{id:"block",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/takeoff.png"}),"\n",(0,l.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Makes the drone take off."}),"\n",(0,l.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/takeoff_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"land",children:"land"}),"\n",(0,l.jsx)(n.h4,{id:"block-1",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/land.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-1",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Makes the drone land."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/land_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"emergency-stop",children:"emergency stop"}),"\n",(0,l.jsx)(n.h4,{id:"block-2",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/emergency_stop.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-2",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Stops all commands to motors. The drone will stop flying immediately."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/emergency_stop_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"moveduration-seconds-roll--pitch--yaw--throttle-",children:"move([duration] seconds, [roll] %, [pitch] %, [yaw] %, [throttle] %)"}),"\n",(0,l.jsx)(n.h4,{id:"block-3",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/move.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-3",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Moves the drone for a certain amount of time (in seconds) in a given direction determined by the flight parameters."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," duration:"]})," the duration of the movement, in seconds",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," roll:"]})," roll power percentage between -100 and +100",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," pitch:"]})," pitch power percentage between -100 and +100",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," yaw:"]})," yaw power percentage between -100 and +100",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," throttle:"]})," throttle power percentage between -100 and +100",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/move_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"turndirection--duration-seconds-power-",children:"turn([direction] , [duration] seconds, [power] %)"}),"\n",(0,l.jsx)(n.h4,{id:"block-4",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/turn.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-4",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Turns CoDrone Mini left or right for a duration in seconds and at a power percentage from 0 to 100% speed."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/turn_params.png"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"direction:"})," left, right ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," duration:"]})," the duration of turn in seconds ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," power:"]})," the power of the turn from 0 to 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/turn_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"hoverseconds-sec",children:"hover([seconds] sec)"}),"\n",(0,l.jsx)(n.h4,{id:"block-5",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/hover.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-5",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This function makes the drone hover for a duration in seconds."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," duration"]}),": the duration of the hovering in seconds"]}),"\n",(0,l.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_commands/hover_example.png"}),"\n",(0,l.jsx)("hr",{className:"section_hr"}),"\n",(0,l.jsx)(n.h2,{id:"flight-variables",children:"Flight Variables"}),"\n",(0,l.jsx)(n.h3,{id:"set_roll",children:"set_roll()"}),"\n",(0,l.jsx)(n.h4,{id:"block-6",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_roll.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-6",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This function sets the roll direction variable but will not send a move command. Negative values will move the drone to the left and positive values will move the drone to the right."}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/cdm_roll.png",width:"286px",height:"240px"}),"\n",(0,l.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," power:"]})," the power of the roll movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"exmaple",children:"Exmaple"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_roll_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"set_pitch",children:"set_pitch()"}),"\n",(0,l.jsx)(n.h4,{id:"block-7",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_pitch.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-7",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This function sets the pitch direction variable but will not send a move command. Negative values will move the drone backward and positive values will move the drone forward."}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/cdm_pitch.png",width:"286px",height:"240px"}),"\n",(0,l.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," power:"]})," the power of the pitch movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_pitch_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"set_yaw",children:"set_yaw()"}),"\n",(0,l.jsx)(n.h4,{id:"block-8",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_yaw_example.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-8",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This function sets the yaw direction variable but will not send a move command. Negative values will turn the drone to the right and positive values will turn the drone to the left."}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/cdm_yaw.png",width:"286px",height:"240px"}),"\n",(0,l.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," power:"]})," the power of the yaw movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_yaw_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"set_throttle",children:"set_throttle()"}),"\n",(0,l.jsx)(n.h4,{id:"block-9",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_throttle_example.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-9",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This function sets the throttle direction variable but will not send a move command. Negative values will move the drone downward and positive values will move the drone upward."}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/cdm_throttle.png",width:"286px",height:"240px"}),"\n",(0,l.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," power:"]})," the power of the throttle movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_throttle_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"moveduration",children:"move(duration)"}),"\n",(0,l.jsx)(n.h4,{id:"block-10",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/move_seconds.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-10",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Moves CoDrone Mini for a duration in seconds in the direction set by the flight variables."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," duration:"]})," the duration of movement in seconds ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-9",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/move_seconds_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"move",children:"move()"}),"\n",(0,l.jsx)(n.h4,{id:"block-11",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/move.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-11",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Moves CoDrone Mini in the direction set by the flight variables with the smallest duration possible (about 0.01 seconds). Since it has no specified duration, it is often used inside of a loop to check sensors simultaneously."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-10",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/move_example.png",width:"340px",height:"360px"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"set_trim",children:"set_trim()"}),"\n",(0,l.jsx)(n.h4,{id:"block-12",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_trim.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-12",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Sets the trim values to adjust for any drifting while CoDrone Mini is flying. Set the trim values in the opposite direction of drift. For example, if the drone is drifting to the right, set roll to a negative value."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," roll:"]})," the power of the roll movement between -100 and 100 ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," pitch:"]})," the power of the pitch movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-11",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/set_trim_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_trim",children:"get_trim()"}),"\n",(0,l.jsx)(n.h4,{id:"block-13",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_trim.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-13",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Returns the current trim values. Combine with a print statement to see the results printed to the console."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," roll:"]})," the power of the roll movement between -100 and 100 ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," pitch:"]})," the power of the pitch movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"example-12",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_trim_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"reset_trim",children:"reset_trim()"}),"\n",(0,l.jsx)(n.h4,{id:"block-14",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/reset_trim.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-14",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Resets the trim values to (0,0)."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-13",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/reset_trim_example.png",width:"240px",height:"360px"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_roll",children:"get_roll()"}),"\n",(0,l.jsx)(n.h4,{id:"block-15",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_roll.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-15",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Returns the current value for the roll flight variable."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," roll:"]})," the power of the roll movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"example-14",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_roll_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_pitch",children:"get_pitch()"}),"\n",(0,l.jsx)(n.h4,{id:"block-16",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_pitch.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-16",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Returns the current value for the pitch flight variable."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," pitch:"]})," the power of the pitch movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"example-15",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_pitch_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_yaw",children:"get_yaw()"}),"\n",(0,l.jsx)(n.h4,{id:"block-17",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_yaw.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-17",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Returns the current value for the yaw flight variable."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," yaw:"]})," the power of the yaw movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"example-16",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_yaw_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_throttle",children:"get_throttle()"}),"\n",(0,l.jsx)(n.h4,{id:"block-18",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_throttle.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-18",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Returns the current value for the throttle flight variable."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," throttle:"]})," the power of the throttle movement between -100 and 100 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"example-17",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/flight_variables/get_throttle_example.png"}),"\n",(0,l.jsx)("hr",{className:"section_hr"}),"\n",(0,l.jsx)(n.h2,{id:"status-checkers",children:"Status Checkers"}),"\n",(0,l.jsx)(n.h3,{id:"code_is_running",children:"code_is_running()"}),"\n",(0,l.jsx)(n.h4,{id:"block-19",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/status_checkers/code_is_running.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-19",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:'Returns a True value while your code is running. Use this block instead of "while True" when you want to run a "forever" loop. Use the "Stop" button in Blockly to stop the program.'}),"\n",(0,l.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"boolean"})," running:"]}),' Returns True if program is running, False if user presses "Stop"']}),"\n",(0,l.jsx)(n.h4,{id:"example-18",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/status_checkers/code_is_running_example.png"}),"\n",(0,l.jsx)("hr",{className:"section_hr"}),"\n",(0,l.jsx)(n.h2,{id:"sensors",children:"Sensors"}),"\n",(0,l.jsx)(n.h3,{id:"get_angle",children:"get_angle()"}),"\n",(0,l.jsx)(n.h4,{id:"block-20",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_angle.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-20",children:"Description"}),"\n",(0,l.jsxs)(n.p,{children:["This function returns the ",(0,l.jsx)(n.strong,{children:"roll, pitch, and yaw angles"})," from the gyroscope. The 0 angle is set when pairing."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_angle_params.png"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"axis:"})," select roll, pitch or yaw"]}),"\n",(0,l.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," angle:"]})," angle, in degrees, from the starting position"]}),"\n",(0,l.jsx)(n.h4,{id:"example-19",children:"Example"}),"\n",(0,l.jsx)(n.p,{children:"For this example, manually turn your drone by hand to see the yaw angle change."}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_angle_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_angle-1",children:"get_angle()"}),"\n",(0,l.jsx)(n.h4,{id:"block-21",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_battery_percentage.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-21",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This function returns the current battery percentage of the drone battery."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," percentage:"]})," the battery percentage from 0 to 100"]}),"\n",(0,l.jsx)(n.h4,{id:"example-20",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_battery_percentage_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_drone_temp",children:"get_drone_temp()"}),"\n",(0,l.jsx)(n.h4,{id:"block-22",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_drone_temp.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-22",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"This block returns the current temperature of the drone in either Celsius or Fahrenheit."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_drone_temp_params.png"}),"\n",(0,l.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"float"})," temperature:"]})," Temperature of the drone, either Celsius or Fahrenheit"]}),"\n",(0,l.jsx)(n.h4,{id:"example-21",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_drone_temp_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_height",children:"get_height()"}),"\n",(0,l.jsx)(n.h4,{id:"block-23",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_height.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-23",children:"Description"}),"\n",(0,l.jsxs)(n.p,{children:["This function returns the current estimated ",(0,l.jsx)(n.strong,{children:"height"})," of the drone from the surface at the moment of pairing. This is calculated by the barometer (air pressure sensor)."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"float"})," height:"]})," the height of the drone in centimeters"]}),"\n",(0,l.jsx)(n.h4,{id:"example-22",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_height_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"get_pressure",children:"get_pressure()"}),"\n",(0,l.jsx)(n.h4,{id:"block-24",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_pressure.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-24",children:"Description"}),"\n",(0,l.jsxs)(n.p,{children:["This function returns barometer data in Pascals. ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.strong,{children:"Note:"})," 1atm = 101325 Pa"]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"float"})," pressure:"]})," the pressure measured from barometer in Pascals"]}),"\n",(0,l.jsx)(n.h4,{id:"example-23",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/get_pressure_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"reset_sensor",children:"reset_sensor()"}),"\n",(0,l.jsx)(n.h4,{id:"block-25",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/reset_sensor.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-25",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Resets the gyroscope angles to 0. The drone will flash while the gyroscope is recalibrating. Do not handle or move the drone during calibration."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-24",children:"Example"}),"\n",(0,l.jsx)(n.p,{children:'Rotate the drone with your hand on a flat surface. See the angles change by observing the printed values in the console. Stop moving the drone when the screen prints "resetting". After resetting, the gyroscope angles will return to 0.'}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sensors/reset_sensor_example.png",width:"240px",height:"420px"}),"\n",(0,l.jsx)("hr",{className:"section_hr"}),"\n",(0,l.jsx)(n.h2,{id:"lights",children:"Lights"}),"\n",(0,l.jsx)(n.h3,{id:"led_color",children:"LED_color()"}),"\n",(0,l.jsx)(n.h4,{id:"block-26",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/LEDcolor.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-26",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Sets the color of CoDrone Mini's LED. Colors are set by using its RGB (red, green, blue) equivalent values."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-26",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," red:"]})," the pixel value for the color red between 0 and 255 ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," green:"]})," the pixel value for the color green between 0 and 255 ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," blue:"]})," the pixel value for the color blue between 0 and 255 ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," brightness:"]})," the brightness of the LEDs between 0 and 255 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-26",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-25",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/LEDcolor_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"led_colorrgbbrightness",children:"LED_color(r,g,b,brightness)"}),"\n",(0,l.jsx)(n.h4,{id:"block-27",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/LEDcolor_pattern.png",width:"500px",height:"125px"}),"\n",(0,l.jsx)(n.h4,{id:"description-27",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:'Sets the color of CoDrone Mini\'s LED blinking pattern. "Blink" flashes the LED on and off and an interval determined by the speed parameter. "Double blink" flashes the LED twice before pausing at the interval determined by the speed parameter.'}),"\n",(0,l.jsx)(n.h4,{id:"parameters-27",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," red:"]})," the pixel value for the color red between 0 and 255 ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," green:"]})," the pixel value for the color green between 0 and 255 ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," blue:"]})," the pixel value for the color blue between 0 and 255 ",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(n.strong,{children:"pattern:"})," blink or double blink ",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," speed:"]})," the speed of the lighting pattern from 1 to 10 ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-27",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-26",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/LEDcolor_pattern_example.png",width:"540px",height:"380px"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"turn_off_led",children:"turn_off_LED()"}),"\n",(0,l.jsx)(n.h4,{id:"block-28",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/LEDoff.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-28",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Turns off CoDrone Mini's LED."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-28",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-28",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-27",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/LEDoff_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"reset_led",children:"reset_LED()"}),"\n",(0,l.jsx)(n.h4,{id:"block-29",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/resetLED.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-29",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Reset's the Codrone mini's LED to its default state (solid red LED)."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-29",children:"Parameters"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"returns-29",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-28",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/lights/resetLED_example.png"}),"\n",(0,l.jsx)("hr",{className:"section_hr"}),"\n",(0,l.jsx)(n.h2,{id:"sound",children:"Sound"}),"\n",(0,l.jsx)(n.h3,{id:"play_notenote-duration-seconds",children:"play_note(note, [duration] seconds)"}),"\n",(0,l.jsx)(n.h4,{id:"block-30",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sound/play_note.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-30",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Plays a note for a specified amount of time using the controller buzzer."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-30",children:"Parameters"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sound/play_note_params.png"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"note:"})," note from C3 to B7",(0,l.jsx)("br",{}),"\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," duration:"]})," the duration of the buzzer note, in seconds"]}),"\n",(0,l.jsx)(n.h4,{id:"returns-30",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-29",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sound/play_note_example.png"}),"\n",(0,l.jsx)("hr",{}),"\n",(0,l.jsx)(n.h3,{id:"play_notefrequency-hertz-duration-seconds",children:"play_note([frequency] Hertz, [duration] seconds)"}),"\n",(0,l.jsx)(n.h4,{id:"block-31",children:"Block"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sound/play_note_hertz.png"}),"\n",(0,l.jsx)(n.h4,{id:"description-31",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Plays a note at a particular frequency for a specified amount of time using the controller buzzer."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-31",children:"Parameters"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," frequency:"]})," The note's frequency in Hertz\n",(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.em,{children:"integer"})," duration:"]})," the duration of the note played in seconds"]}),"\n",(0,l.jsx)(n.h4,{id:"returns-31",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:"None"}),"\n",(0,l.jsx)(n.h4,{id:"example-30",children:"Example"}),"\n",(0,l.jsx)("img",{src:"/img/CDM/blockly_docu/senior/sound/play_note_hertz_example.png"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var l=r(6540);const i={},s=l.createContext(i);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);