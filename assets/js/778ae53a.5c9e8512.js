"use strict";(self.webpackChunkdoc_v_3=self.webpackChunkdoc_v_3||[]).push([[5334],{8812:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var i=n(4848),s=n(8453);const t={title:"Junior Block Documentation",slug:"Junior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},o=void 0,r={id:"CoDroneEDU/Blockly/page3",title:"Junior Block Documentation",description:"window.print()}>Print",source:"@site/docs/CoDroneEDU/Blockly/page3.md",sourceDirName:"CoDroneEDU/Blockly",slug:"/CoDroneEDU/Blockly/Junior-Block-Documentation",permalink:"/docs/CoDroneEDU/Blockly/Junior-Block-Documentation",draft:!1,unlisted:!1,editUrl:"https://github.com/RobolinkInc/doc-v3/tree/main/docs/docs/CoDroneEDU/Blockly/page3.md",tags:[],version:"current",frontMatter:{title:"Junior Block Documentation",slug:"Junior-Block-Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},sidebar:"CoDroneEDU",previous:{title:"How to use Blockly",permalink:"/docs/CoDroneEDU/Blockly/How-to-use-Blockly"},next:{title:"Senior Block Documentation",permalink:"/docs/CoDroneEDU/Blockly/Senior-Block-Documentation"}},c={},a=[{value:"Flight Commands",id:"flight-commands",level:2},{value:"take off",id:"take-off",level:3},{value:"Block",id:"block",level:4},{value:"Description",id:"description",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"land",id:"land",level:3},{value:"Block",id:"block-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example-1",level:4},{value:"emergency stop",id:"emergency-stop",level:3},{value:"Block",id:"block-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Example",id:"example-2",level:4},{value:"hover for [seconds] seconds",id:"hover-for-seconds-seconds",level:3},{value:"Block",id:"block-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Example",id:"example-3",level:4},{value:"go [direction] for [seconds] seconds at [power] % power",id:"go-direction-for-seconds-seconds-at-power--power",level:3},{value:"Block",id:"block-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Example",id:"example-4",level:4},{value:"turn [direction] [degrees] degrees",id:"turn-direction-degrees-degrees",level:3},{value:"Block",id:"block-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Example",id:"example-5",level:4},{value:"turn [direction] for [seconds] seconds at [power]% power",id:"turn-direction-for-seconds-seconds-at-power-power",level:3},{value:"Block",id:"block-6",level:4},{value:"Description",id:"description-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Example",id:"example-6",level:4},{value:"Flight Sequences",id:"flight-sequences",level:2},{value:"flip [direction]",id:"flip-direction",level:3},{value:"Block",id:"block-7",level:4},{value:"Description",id:"description-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Example",id:"example-7",level:4},{value:"Lights",id:"lights",level:2},{value:"set drone LED color to [color], with a brightness of [brightness]",id:"set-drone-led-color-to-color-with-a-brightness-of-brightness",level:3},{value:"Block",id:"block-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Example",id:"example-8",level:4},{value:"turn drone LED off",id:"turn-drone-led-off",level:3},{value:"Block",id:"block-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Example",id:"example-9",level:4},{value:"set controller LED to [color], with a brightness of [brightness]",id:"set-controller-led-to-color-with-a-brightness-of-brightness",level:3},{value:"Block",id:"block-10",level:4},{value:"Description",id:"description-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Example",id:"example-10",level:4},{value:"turn controller LED off",id:"turn-controller-led-off",level:3},{value:"Block",id:"block-11",level:4},{value:"Description",id:"description-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Example",id:"example-11",level:4},{value:"Sound",id:"sound",level:2},{value:"play this note [note] for [duration] seconds on drone",id:"play-this-note-note-for-duration-seconds-on-drone",level:3},{value:"Block",id:"block-12",level:4},{value:"Description",id:"description-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Example",id:"example-12",level:4},{value:"play this note [note] for [duration] seconds on controller",id:"play-this-note-note-for-duration-seconds-on-controller",level:3},{value:"Block",id:"block-13",level:4},{value:"Description",id:"description-13",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Example",id:"example-13",level:4},{value:"Lists",id:"lists",level:2},{value:"create empty list",id:"create-empty-list",level:3},{value:"Block",id:"block-14",level:4},{value:"Description",id:"description-14",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Example",id:"example-14",level:4},{value:"create list with",id:"create-list-with",level:3},{value:"Block",id:"block-15",level:4},{value:"Description",id:"description-15",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Example",id:"example-15",level:4},{value:"create list with item [item] repeated [number] times",id:"create-list-with-item-item-repeated-number-times",level:3},{value:"Block",id:"block-16",level:4},{value:"Description",id:"description-16",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Example",id:"example-16",level:4},{value:"length of",id:"length-of",level:3},{value:"Block",id:"block-17",level:4},{value:"Description",id:"description-17",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Example",id:"example-17",level:4},{value:"[list] is empty",id:"list-is-empty",level:3},{value:"Block",id:"block-18",level:4},{value:"Description",id:"description-18",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Example",id:"example-18",level:4},{value:"in list [list] find [occurrence] occurrence of item [item]",id:"in-list-list-find-occurrence-occurrence-of-item-item",level:3},{value:"Block",id:"block-19",level:4},{value:"Description",id:"description-19",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Example",id:"example-19",level:4},{value:"in list [list] get/remove [occurrence]",id:"in-list-list-getremove-occurrence",level:3},{value:"Block",id:"block-20",level:4},{value:"Description",id:"description-20",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Example",id:"example-20",level:4},{value:"in list [list] set/insert [occurence] as [value]",id:"in-list-list-setinsert-occurence-as-value",level:3},{value:"Block",id:"block-21",level:4},{value:"Description",id:"description-21",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Example",id:"example-21",level:4},{value:"in list [list] get sub-list from [position1] to [position2]",id:"in-list-list-get-sub-list-from-position1-to-position2",level:3},{value:"Block",id:"block-22",level:4},{value:"Description",id:"description-22",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Example",id:"example-22",level:4},{value:"sort numeric/alphabetic ascending/descending",id:"sort-numericalphabetic-ascendingdescending",level:3},{value:"Block",id:"block-23",level:4},{value:"Description",id:"description-23",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Example",id:"example-23",level:4},{value:"make [list from text/text from list] [text/list] with delimiter [value]",id:"make-list-from-texttext-from-list-textlist-with-delimiter-value",level:3},{value:"Block",id:"block-24",level:4},{value:"Description",id:"description-24",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Example",id:"example-24",level:4},{value:"reverse [list]",id:"reverse-list",level:3},{value:"Block",id:"block-25",level:4},{value:"Description",id:"description-25",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Example",id:"example-25",level:4}];function d(e){const l={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("div",{className:"print_div",children:(0,i.jsx)("button",{id:"print_page",onClick:()=>window.print(),children:"Print"})}),"\n",(0,i.jsx)("div",{className:"change_version",children:(0,i.jsxs)(l.p,{children:["version 2.2.0 (",(0,i.jsx)(l.a,{href:"/docs/CoDroneEDU/Blockly/Blockly-Changelog",children:"Changelog"}),")"]})}),"\n",(0,i.jsx)(l.h2,{id:"flight-commands",children:"Flight Commands"}),"\n",(0,i.jsx)(l.h3,{id:"take-off",children:"take off"}),"\n",(0,i.jsx)(l.h4,{id:"block",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/takeoff.png",width:"120px"}),"\n",(0,i.jsx)(l.h4,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(l.p,{children:["This functions makes the drone take off. CoDrone EDU takes off at an average height of 80 centimeters off the ground. A takeoff block must be used before any other flight command or flight movement. ",(0,i.jsx)(l.strong,{children:"NOTE:"})," The takeoff height cannot be modified."]}),"\n",(0,i.jsx)(l.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("takeoff_land_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/takeoff_land_example.png",width:"120px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"land",children:"land"}),"\n",(0,i.jsx)(l.h4,{id:"block-1",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/land.PNG",width:"90px"}),"\n",(0,i.jsx)(l.h4,{id:"description-1",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"This function makes the drone land by throttling down safely."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("takeoff_land_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/takeoff_land_example.png",width:"120px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"emergency-stop",children:"emergency stop"}),"\n",(0,i.jsx)(l.h4,{id:"block-2",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/emergencystop.png",width:"180px"}),"\n",(0,i.jsx)(l.h4,{id:"description-2",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"This function stops all motors immediately. Use with caution to avoid damaging your drone."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("emergencystop_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/emergencystop_example.png",width:"180px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"hover-for-seconds-seconds",children:"hover for [seconds] seconds"}),"\n",(0,i.jsx)(l.h4,{id:"block-3",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/hover.png",width:"220px"}),"\n",(0,i.jsx)(l.h4,{id:"description-3",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"This function makes the drone hover in place for a given duration in seconds."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," duration:"]})," the duration of hover, in seconds"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("hover_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/hover_example.png",width:"240px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"go-direction-for-seconds-seconds-at-power--power",children:"go [direction] for [seconds] seconds at [power] % power"}),"\n",(0,i.jsx)(l.h4,{id:"block-4",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/go_for_seconds_at_power.png",width:"480px"}),"\n",(0,i.jsx)(l.h4,{id:"description-4",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"This function flies the drone in a direction for a given duration and a power percentage."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/go_at_power_params.png",width:"480px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"direction:"})," forward, backward, up, down, left, right",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," duration:"]})," the duration of movement, in seconds",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," power:"]})," the power/speed of drone between 0 and 100"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("go_at_power_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/go_at_power_example.png",width:"420px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"turn-direction-degrees-degrees",children:"turn [direction] [degrees] degrees"}),"\n",(0,i.jsx)(l.h4,{id:"block-5",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/turn_to.png",width:"240px"}),"\n",(0,i.jsx)(l.h4,{id:"description-5",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Turns CoDrone EDU to the left or to the right a given number of degrees."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/turn_to_params.png",width:"240px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"direction:"})," left, right",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," degrees:"]})," the angle of the turn between -180 and +180"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("turn_to_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/turn_to_example.png",width:"240px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"turn-direction-for-seconds-seconds-at-power-power",children:"turn [direction] for [seconds] seconds at [power]% power"}),"\n",(0,i.jsx)(l.h4,{id:"block-6",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/turn_direction_seconds_power.png",width:"450px"}),"\n",(0,i.jsx)(l.h4,{id:"description-6",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Turns CoDrone EDU to the left or to the right for a duration in seconds at a percentange of power."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"direction:"})," left, right",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," duration:"]})," the duration of the movement, in seconds",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," power:"]})," the power/speed of the drone between 0 and 100"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-6",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("turn_direction_seconds_power_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/turn_direction_seconds_power_example.png",width:"450px"}),"\n",(0,i.jsx)("hr",{className:"section_hr"}),"\n",(0,i.jsx)(l.h2,{id:"flight-sequences",children:"Flight Sequences"}),"\n",(0,i.jsx)(l.h3,{id:"flip-direction",children:"flip [direction]"}),"\n",(0,i.jsx)(l.h4,{id:"block-7",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/flip.png",width:"180px"}),"\n",(0,i.jsx)(l.h4,{id:"description-7",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"This functions makes the drone flip back, front, right, or left. Make sure your battery percentage is over 50% for the flip to execute."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/flip_params.png",width:"200px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"direction:"})," back, front, right, left"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-7",children:"Example"}),"\n",(0,i.jsx)(l.p,{children:"Add a hover or delay block after the flip if you need to stabilize before your next command. The drone takes 3-4 seconds after a flip before it can do another flight command."}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("flip_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/flip_example.png",width:"500px"}),"\n",(0,i.jsx)("hr",{className:"section_hr"}),"\n",(0,i.jsx)(l.h2,{id:"lights",children:"Lights"}),"\n",(0,i.jsx)(l.h3,{id:"set-drone-led-color-to-color-with-a-brightness-of-brightness",children:"set drone LED color to [color], with a brightness of [brightness]"}),"\n",(0,i.jsx)(l.h4,{id:"block-8",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_drone_led.png",width:"450px"}),"\n",(0,i.jsx)(l.h4,{id:"description-8",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Sets the color and brightness of the CoDrone EDU drone LED."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_drone_led_params.png",width:"450px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"color:"})," select a color from the color palette",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," brightness:"]})," the brightness of the LED between 0 and 255"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-8",children:"Example"}),"\n",(0,i.jsx)(l.p,{children:"In this example, the program is switching between three colors (red, yellow, and green) every half second for 10 times."}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("set_drone_led_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_drone_led_example.png",width:"500px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In this example, a list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created ",(0,i.jsx)(l.code,{children:'["Red", "Blue", "White"]'}),". For 25 iterations, the ",(0,i.jsx)(l.code,{children:"color"})," is set to a random color (a string) from ",(0,i.jsx)(l.code,{children:"test_list"}),", and the drone's LED color lights up with that color."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("set_drone_led_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_drone_led_example2.png",width:"540px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"turn-drone-led-off",children:"turn drone LED off"}),"\n",(0,i.jsx)(l.h4,{id:"block-9",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/drone_led_off.png",width:"180px"}),"\n",(0,i.jsx)(l.h4,{id:"description-9",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Turns off the CoDrone EDU drone LED."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-9",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("drone_led_off_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/drone_led_off_example.png",width:"480px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"set-controller-led-to-color-with-a-brightness-of-brightness",children:"set controller LED to [color], with a brightness of [brightness]"}),"\n",(0,i.jsx)(l.h4,{id:"block-10",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_controller_led.png",width:"475px"}),"\n",(0,i.jsx)(l.h4,{id:"description-10",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Sets the color and brightness of the CoDrone EDU controller LED."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_controller_LED_params.png",width:"475px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"color:"})," select a color from the color palette",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," brightness:"]})," positive integer between 0 and 255"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-10",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-10",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("set_controller_LED_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_controller_LED_example.png",width:"500px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"turn-controller-led-off",children:"turn controller LED off"}),"\n",(0,i.jsx)(l.h4,{id:"block-11",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/controller_led_off.png",width:"220px"}),"\n",(0,i.jsx)(l.h4,{id:"description-11",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Turns off the CoDrone EDU controller LED."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"returns-11",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-11",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("controller_led_off_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/controller_led_off_example.png",width:"480px"}),"\n",(0,i.jsx)("hr",{className:"section_hr"}),"\n",(0,i.jsx)(l.h2,{id:"sound",children:"Sound"}),"\n",(0,i.jsx)(l.h3,{id:"play-this-note-note-for-duration-seconds-on-drone",children:"play this note [note] for [duration] seconds on drone"}),"\n",(0,i.jsx)(l.h4,{id:"block-12",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/play_note_drone.png",width:"430px"}),"\n",(0,i.jsx)(l.h4,{id:"description-12",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Plays a note for a duration in seconds using the CoDrone EDU drone buzzer."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/play_note_drone_params.png",width:"430px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"note:"})," note range from C3 to B7, Mute, Fin",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," duration:"]})," the duration of the note played, in seconds"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-12",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-12",children:"Example"}),"\n",(0,i.jsx)(l.p,{children:"In this example, a different note is being played for half a second on the drone."}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("play_note_drone_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/play_note_drone_example.png",width:"430px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(l.p,{children:"In the example below, the G7 note is played for 3 seconds on the drone before takeoff. After takeoff, the G7 note played for 3 seconds again on the drone. After turning to the left 90 degrees, the G7 note is played again for 3 seconds."}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("play_note_drone_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/play_note_drone_example2.png",width:"430px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"play-this-note-note-for-duration-seconds-on-controller",children:"play this note [note] for [duration] seconds on controller"}),"\n",(0,i.jsx)(l.h4,{id:"block-13",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/play_note_controller.png",width:"450px"}),"\n",(0,i.jsx)(l.h4,{id:"description-13",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Plays a note for a duration in seconds using the CoDrone EDU controller buzzer."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/play_note_controller_params.png",width:"450px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"note:"})," note range from C3 to B7, Mute, Fin",(0,i.jsx)(l.br,{}),"\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," duration:"]})," the duration of the note played, in seconds"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-13",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-13",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("play_note_controller_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/play_note_controller_example.png",width:"450px"}),"\n",(0,i.jsx)("hr",{className:"section_hr"}),"\n",(0,i.jsx)(l.h2,{id:"lists",children:"Lists"}),"\n",(0,i.jsx)(l.h3,{id:"create-empty-list",children:"create empty list"}),"\n",(0,i.jsx)(l.h4,{id:"block-14",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_empty_list.png",width:"180px"}),"\n",(0,i.jsx)(l.h4,{id:"description-14",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Creates an empty list (a list with no items)."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"returns-14",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"}),":"]})," An empty list ",(0,i.jsx)(l.code,{children:"[]"})]}),"\n",(0,i.jsx)(l.h4,{id:"example-14",children:"Example"}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("create_empty_list_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_empty_list_example.png",width:"360px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"create-list-with",children:"create list with"}),"\n",(0,i.jsx)(l.h4,{id:"block-15",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_list_with.png",width:"200px"}),"\n",(0,i.jsx)(l.h4,{id:"description-15",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:'Creates a list based on given values attached to the "create list with" block. The list could contain values with different data types: strings, integers, floats.'}),"\n",(0,i.jsx)(l.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_list_with_params.png",width:"260px"}),"\n",(0,i.jsx)(l.p,{children:"Clicking on the gear icon will give you the option to manually add or reduce the number of items."}),"\n",(0,i.jsx)(l.h4,{id:"returns-15",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"}),":"]}),' A list with values attached onto the "create list with" block']}),"\n",(0,i.jsx)(l.h4,{id:"example-15",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, a list variable was created with a value of the same data type. The ",(0,i.jsx)(l.code,{children:"test_list"})," variable is assigned the value of ",(0,i.jsx)(l.code,{children:"[2.5,3.5,1]"})]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("create_list_with_example1_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_list_with_example1.png",width:"420px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In this example, a list variable was created with a value of different data types. The ",(0,i.jsx)(l.code,{children:"test_list"})," variable is assigned the value of ",(0,i.jsx)(l.code,{children:'[2,True,"Hello"]'})]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("create_list_with_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_list_with_example2.png",width:"490px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"create-list-with-item-item-repeated-number-times",children:"create list with item [item] repeated [number] times"}),"\n",(0,i.jsx)(l.h4,{id:"block-16",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_list_repeated.png",width:"410px"}),"\n",(0,i.jsx)(l.h4,{id:"description-16",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:'Creates a list with a given value repeated a given number of times by the user. The both parameters could contain an operation like "1+1", as long as it returns a value\u2014integer or float. The first parameter can be a string value as well.'}),"\n",(0,i.jsx)(l.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.em,{children:(0,i.jsx)(l.strong,{children:"integer/float/string"})}),"\xa0\xa0",(0,i.jsx)(l.strong,{children:"value repeated:"})," value that will be repeated in the list",(0,i.jsx)("br",{}),"\r\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"}),"\xa0\xa0repeats:"]})," the number of times the given value will be in the list."]}),"\n",(0,i.jsx)(l.h4,{id:"returns-16",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"}),":"]})," A list containing the given value repeated a given number of times."]}),"\n",(0,i.jsx)(l.h4,{id:"example-16",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, instead of simply putting a number block, the first parameter contains an operation block that will return a number, which is 2. The second parameter contains a number block of 3. Printing test_list will result in ",(0,i.jsx)(l.code,{children:"[2,2,2]"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("create_list_repeated_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/create_list_repeated_example.png",width:"800px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"length-of",children:"length of"}),"\n",(0,i.jsx)(l.h4,{id:"block-17",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/length.png",width:"120px"}),"\n",(0,i.jsx)(l.h4,{id:"description-17",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Returns the length of the list, which is the number of items that are inside the list."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"returns-17",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"int"})," length:"]})," The length (number of items in the list) of the list."]}),"\n",(0,i.jsx)(l.h4,{id:"example-17",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["After creating the list ",(0,i.jsx)(l.code,{children:"[1,2,3]"})," and assigning it to the variable ",(0,i.jsx)(l.code,{children:"test_list"}),", the console will print the length of ",(0,i.jsx)(l.code,{children:"test_list"}),", which is ",(0,i.jsx)(l.code,{children:"3"})," (three items in the list)."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("length_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/length_example.png",width:"400px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"list-is-empty",children:"[list] is empty"}),"\n",(0,i.jsx)(l.h4,{id:"block-18",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/is_empty.png",width:"140px"}),"\n",(0,i.jsx)(l.h4,{id:"description-18",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Returns a boolean value indicating if the list is empty or not (if the list has no items or not)."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"})," list variable:"]})," a variable that's a list"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-18",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"boolean"}),"\xa0\xa0is empty:"]})," ",(0,i.jsx)(l.code,{children:"True"})," if there are items in the list. Otherwise, returns ",(0,i.jsx)(l.code,{children:"False"})]}),"\n",(0,i.jsx)(l.h4,{id:"example-18",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, ",(0,i.jsx)(l.code,{children:"test_list"}),' block is attached to the "create empty list" block. The console prints ',(0,i.jsx)(l.code,{children:"test_list"}),", which is ",(0,i.jsx)(l.code,{children:"[]"}),". Then, the console prints the length of ",(0,i.jsx)(l.code,{children:"test_list"}),", which is 0. Finally, the console prints whether or not ",(0,i.jsx)(l.code,{children:"test_list"})," is empty, which is ",(0,i.jsx)(l.code,{children:"True"}),'. These 3 printing statements are ways to verify if the list is indeed empty or not. "is empty" is useful when applying if-statements to it.']}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("is_empty_example1_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/is_empty_example1.png",width:"340px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the console prints whether or not ",(0,i.jsx)(l.code,{children:"test_list"})," is empty, which is ",(0,i.jsx)(l.code,{children:"False"}),". ",(0,i.jsx)(l.code,{children:"test_list"})," indeed is not empty since there are items in it."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("is_empty_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/is_empty_example2.png",width:"400px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"in-list-list-find-occurrence-occurrence-of-item-item",children:"in list [list] find [occurrence] occurrence of item [item]"}),"\n",(0,i.jsx)(l.h4,{id:"block-19",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/find_occurrence.png",width:"440px"}),"\n",(0,i.jsx)(l.h4,{id:"description-19",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Retuns the index (position) of the first/last occurrence of the given item in the given list variable."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/find_occurrence_params.png",width:"440px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"})," list variable:"]})," a variable that is a list",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"occurrence:"})," the first or last occurrence of the item",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.em,{children:(0,i.jsx)(l.strong,{children:"integer/float/string"})}),"\xa0\xa0",(0,i.jsx)(l.strong,{children:"item:"})," value of the item"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-19",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer"})," index:"]})," The position of the item in the list"]}),"\n",(0,i.jsx)(l.h4,{id:"example-19",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the ",(0,i.jsx)(l.code,{children:"test_list"})," variable is assigned the value of ",(0,i.jsx)(l.code,{children:"[1,2,3]"}),". The console prints ",(0,i.jsx)(l.code,{children:"2"}),' as the first occurrence of the item "2" in ',(0,i.jsx)(l.code,{children:"test_list"})," since it is the second item in ",(0,i.jsx)(l.code,{children:"test_list"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("find_occurrence_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/find_occurrence_example.png",width:"580px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"in-list-list-getremove-occurrence",children:"in list [list] get/remove [occurrence]"}),"\n",(0,i.jsx)(l.h4,{id:"block-20",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/get_remove.png",width:"290px"}),"\n",(0,i.jsx)(l.h4,{id:"description-20",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:'If choosing the "get" option, it returns the value of the item in a given position of the list. If choosing the "remove" option, it removes the item in a given position of the list. If choosing the "get and remove" option, it returns the value of the item and removes the item in a given position of the list.'}),"\n",(0,i.jsx)(l.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/get_remove_params1.png",width:"290px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/get_remove_params2.png",width:"300px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"}),"\xa0\xa0list variable:"]})," A variable that is a list",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"command:"})," option to whether to get, get and remove, or remove an item from the list",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"position:"})," The position of the item. ",(0,i.jsx)(l.strong,{children:'(Some options require an integer input like the "#" and "# from end").'})]}),"\n",(0,i.jsx)(l.h4,{id:"returns-20",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer/float/string"}),"\xa0\xa0item:"]}),' If choosing "get" or "get and remove", the value of the item is returned. If choosing "remove", returns ',(0,i.jsx)(l.code,{children:"None"})]}),"\n",(0,i.jsx)(l.h4,{id:"example-20",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[100,5,2,3]"}),". For the first and third print statements, ",(0,i.jsx)(l.code,{children:"undefined"})," is printed since the position numbers are out of range (the positions don't exist) in ",(0,i.jsx)(l.code,{children:"test_list"}),". ",(0,i.jsx)(l.code,{children:"5"})," and ",(0,i.jsx)(l.code,{children:"3"})," are printed for the second and fourth print statements, respectively, since ",(0,i.jsx)(l.code,{children:"5"})," is in position #2 and ",(0,i.jsx)(l.code,{children:"3"})," is in position #4."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("get_remove_example1_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/get_remove_example1.png",width:"470px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In the example below, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[100,5,2,3]"}),". Then, in order, the items at position #4, position #3, and position #2 are removed from ",(0,i.jsx)(l.code,{children:"test_list"}),". The console prints ",(0,i.jsx)(l.code,{children:"test_list"}),", which outputs ",(0,i.jsx)(l.code,{children:"[100]"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("get_remove_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/get_remove_example2.png",width:"430px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In the example below, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[100,5,2,3]"}),". Then, in order, the items at positiong #4, position #3, and position #2 are printed on the console and removed from ",(0,i.jsx)(l.code,{children:"test_list"}),". The console prints ",(0,i.jsx)(l.code,{children:"test_list"}),", which outputs ",(0,i.jsx)(l.code,{children:"[100]"}),". ",(0,i.jsx)(l.strong,{children:"NOTE:"}),' "get and removed" option makes the block capable to be attached to a variable block as well.']}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("get_remove_example3_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/get_remove_example3.png",width:"550px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"in-list-list-setinsert-occurence-as-value",children:"in list [list] set/insert [occurence] as [value]"}),"\n",(0,i.jsx)(l.h4,{id:"block-21",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_insert.png",width:"340px"}),"\n",(0,i.jsx)(l.h4,{id:"description-21",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:'If choosing the "set" option, the block will set an existing item at a given position to a given value. If choosing the "insert at" option, the block insert/add a new item a given value into a given position in the list.'}),"\n",(0,i.jsx)(l.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_insert_params1.png",width:"340px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_insert_params2.png",width:"340px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"}),": list variable:"]})," a variable that is a list that you'll be modifying",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"command:"})," option to whether set an existing item to a value or insert a new item into the list.",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"position:"})," The position of the item. ",(0,i.jsx)(l.strong,{children:'(Some options require an integer input like the "#" and "# from end").'}),(0,i.jsx)("br",{}),"\r\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"integer/float/string"})," value:"]})," The value that the updated or new item will be."]}),"\n",(0,i.jsx)(l.h4,{id:"returns-21",children:"Returns"}),"\n",(0,i.jsx)(l.p,{children:"None"}),"\n",(0,i.jsx)(l.h4,{id:"example-21",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[100,5,2,3]"}),". On the next block, the item at position #1 (",(0,i.jsx)(l.code,{children:"100"}),") be a set with a new value given by the ",(0,i.jsx)(l.strong,{children:"value"}),' parameter. The new value is equal to the current value of the item at position #1 (represented by the "get" block inside) subtracted by 1 (',(0,i.jsx)(l.code,{children:"99"}),"). Finally, printing ",(0,i.jsx)(l.code,{children:"test_list"})," will result this output: ",(0,i.jsx)(l.code,{children:"[99,5,2,3]"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("set_insert_example1_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_insert_example1.png",width:"880px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[100,5,2,3]"}),". On the next block, a new item will be inserted/at position #5 with a value given by the ",(0,i.jsx)(l.strong,{children:"value"}),' parameter. The new item\'s value is equal to the value of the item at position #1 (represented by the "get" block inside) subtracted by 1 (',(0,i.jsx)(l.code,{children:"99"}),"). Finally, printing ",(0,i.jsx)(l.code,{children:"test_list"})," will result this output: ",(0,i.jsx)(l.code,{children:"[100,5,2,3,99]"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("set_insert_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/set_insert_example2.png",width:"880px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"in-list-list-get-sub-list-from-position1-to-position2",children:"in list [list] get sub-list from [position1] to [position2]"}),"\n",(0,i.jsx)(l.h4,{id:"block-22",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sublist.png",width:"480px"}),"\n",(0,i.jsx)(l.h4,{id:"description-22",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Returns a list that is sub-list of a given list from a given starting position to a given ending position. It does not modify the given list."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sublist_params1.png",width:"480px"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sublist_params2.png",width:"500px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"})," list variable:"]})," a variable that is a list",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"starting position:"})," The position on the list where the sub-list will start at. ",(0,i.jsx)(l.strong,{children:'(Some options require an integer input like the "#" and "# from end").'}),(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"ending position:"})," The position on the list where the sub-list will end at. ",(0,i.jsx)(l.strong,{children:'(Some options require an integer input like the "#" and "# from end").'}),(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(l.h4,{id:"returns-22",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"})," sub-list:"]})," The sub-list from the given list"]}),"\n",(0,i.jsx)(l.h4,{id:"example-22",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[23,2,100,5,4,3]"}),". The list variable ",(0,i.jsx)(l.code,{children:"new_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[23,2,100,5]"}),'. This is because the "get sub-list" block gets a portion of ',(0,i.jsx)(l.code,{children:"test_list"})," from position #1 (",(0,i.jsx)(l.code,{children:"23"}),") to position #4 (",(0,i.jsx)(l.code,{children:"5"}),")."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("sublist_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sublist_example.png",width:"800px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"sort-numericalphabetic-ascendingdescending",children:"sort numeric/alphabetic ascending/descending"}),"\n",(0,i.jsx)(l.h4,{id:"block-23",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sort.png",width:"300px"}),"\n",(0,i.jsx)(l.h4,{id:"description-23",children:"Description"}),"\n",(0,i.jsxs)(l.p,{children:['Returns sorted list based on numerical/alphaetical order and ascending/descending order. This could be attached to a "print" block or a "set variable" block.',(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"NOTE:"})," alphabetical ordering, in programming, is done using the strings' letters' ",(0,i.jsx)("a",{href:"https://www.geeksforgeeks.org/ascii-table/",target:"_blank",children:"ASCII codes"}),". The uppercase alphabet (A-Z) has ASCII values between 65 and 90, and the lowercase alphabet (a-z) has ASCII values between 97 and 122. This means lowercase alphabet has higher ASCII values than the uppercase alphabet."]}),"\n",(0,i.jsx)(l.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sort_params1.png",width:"300px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sort_params2.png",width:"300px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsx)(l.strong,{children:"order type:"})," The way the list is sorted, by alphabetical or numerical order ",(0,i.jsx)("br",{}),"\r\n",(0,i.jsx)(l.strong,{children:"order:"})," ascending (A-z or smallest to biggest) or descending (z-A or biggest to smallest)"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-23",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"})," sorted list:"]})," a sorted list"]}),"\n",(0,i.jsx)(l.h4,{id:"example-23",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, a list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:"[5,2,3]"}),". The console prints the output of the sorted list from ",(0,i.jsx)(l.code,{children:"test_list"})," in ascending, numerical order ",(0,i.jsx)(l.code,{children:"[2,3,5]"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("sort_example1_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sort_example1.png",width:"500px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In the example below, a list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:'["Zebra","apple","Mouse"]'}),". The console prints the sorted list from ",(0,i.jsx)(l.code,{children:"test_list"})," in descending alphabetical order, which is ",(0,i.jsx)(l.code,{children:'["apple", "Zebra", "Mouse"]'}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("sort_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sort_example2.png",width:"500px"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(l.p,{children:["In the example below, a list variable ",(0,i.jsx)(l.code,{children:"test_list"})," is created with a value of ",(0,i.jsx)(l.code,{children:'["Zebra","apple","Mouse"]'}),". The console prints the sorted list from ",(0,i.jsx)(l.code,{children:"test_list"})," in descending alphabetical order (ignoring case), which is ",(0,i.jsx)(l.code,{children:'["Zebra", "Mouse", "apple"]'}),'. Ignoring case essentially reads the uppercase letters as lowercase letters, so a lowercase "z" has a greater ASCII value than a lowercase "m" (and lowercase "m" greater than lowercase "a").']}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("sort_example3_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/sort_example3.png",width:"600px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"make-list-from-texttext-from-list-textlist-with-delimiter-value",children:"make [list from text/text from list] [text/list] with delimiter [value]"}),"\n",(0,i.jsx)(l.h4,{id:"block-24",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/delimiter.png",width:"400px"}),"\n",(0,i.jsx)(l.h4,{id:"description-24",children:"Description"}),"\n",(0,i.jsxs)(l.p,{children:['If choosing the "list from text" option, the block internally splits the given text into parts based on the given delimiter and returns a list. For example, the string ',(0,i.jsx)(l.code,{children:'"12!23!5!"'})," with a delimiter of ",(0,i.jsx)(l.code,{children:'"!"'})," will be converted to ",(0,i.jsx)(l.code,{children:"[12,23,5]"}),'. If choosing the "text from list" option, the block internally joins the given list\'s items based on the given delimiter and returns a string. For example, the list ',(0,i.jsx)(l.code,{children:"[12,3,5]"})," with a delimiter of ",(0,i.jsx)(l.code,{children:'"--"'})," will be converted to ",(0,i.jsx)(l.code,{children:'"12--3--5"'}),".",(0,i.jsx)("br",{})]}),"\n",(0,i.jsx)(l.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/delimiter_params1.png",width:"400px"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"string/list"})," string/list variable:"]})," the variable, which is a list or text, that will be converted into a string or list.",(0,i.jsx)("br",{}),"\r\n",(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"string"})," delimiter:"]})," a string of characters that will join a list's items or split the text's contents."]}),"\n",(0,i.jsx)(l.h4,{id:"returns-24",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"string/list"})," converted string or list:"]})," a list (or string) that is the result of the conversion of the given string (or list) with the given delimiter."]}),"\n",(0,i.jsx)(l.h4,{id:"example-24",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the string ",(0,i.jsx)(l.code,{children:'"14,2,1"'})," will be converted into a list with the ",(0,i.jsx)(l.code,{children:'","'})," delimiter. The list variable ",(0,i.jsx)(l.code,{children:"test_list"})," will be set to this conversion. The console will print ",(0,i.jsx)(l.code,{children:"test_list"}),", which is ",(0,i.jsx)(l.code,{children:"[14,2,1]"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("delimiter_example1_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/delimiter_example1.png",width:"700px"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," will have value of ",(0,i.jsx)(l.code,{children:"[23,2,100]"}),". The string variable ",(0,i.jsx)(l.code,{children:"test_string"})," will have the value of ",(0,i.jsx)(l.code,{children:'"23--2--100"'})," since it's set to the value of the converted list of ",(0,i.jsx)(l.code,{children:"test_list"})," with the ",(0,i.jsx)(l.code,{children:"--"})," delimiter."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("delimiter_example2_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/delimiter_example2.png",width:"700px"}),"\n",(0,i.jsx)("hr",{}),"\n",(0,i.jsx)(l.h3,{id:"reverse-list",children:"reverse [list]"}),"\n",(0,i.jsx)(l.h4,{id:"block-25",children:"Block"}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/reverse_list.png",width:"140px"}),"\n",(0,i.jsx)(l.h4,{id:"description-25",children:"Description"}),"\n",(0,i.jsx)(l.p,{children:"Returns a list with the reversed order of the given list."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"})," list variable:"]})," the list variable that will its order reversed"]}),"\n",(0,i.jsx)(l.h4,{id:"returns-25",children:"Returns"}),"\n",(0,i.jsxs)(l.p,{children:[(0,i.jsxs)(l.strong,{children:[(0,i.jsx)(l.em,{children:"list"})," reversed list:"]})," a reversed list of the given list"]}),"\n",(0,i.jsx)(l.h4,{id:"example-25",children:"Example"}),"\n",(0,i.jsxs)(l.p,{children:["In this example, the list variable ",(0,i.jsx)(l.code,{children:"test_list"})," has a value of ",(0,i.jsx)(l.code,{children:"[23,2,100,5,4,3]"}),". Then, the list variable ",(0,i.jsx)(l.code,{children:"new_list"})," is set to the value of a reversed list of ",(0,i.jsx)(l.code,{children:"test_list"}),". The console will print ",(0,i.jsx)(l.code,{children:"[3,4,5,100,2,23]"}),"."]}),"\n",(0,i.jsx)("div",{className:"loadXmlDiv",children:(0,i.jsxs)("button",{className:"loadXmlButton",onClick:()=>loadBlocklyXml("reverse_list_example_junior"),children:[(0,i.jsx)("img",{src:"/img/Open_in_Blockly_logo.png",alt:"Logo",className:"button-logo"}),(0,i.jsx)("span",{className:"button-text",children:"Open in Blockly"})]})}),"\n",(0,i.jsx)("img",{src:"/img/CDE/blockly_docu/junior/reverse_list_example.png",width:"450px"})]})}function h(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,l,n)=>{n.d(l,{R:()=>o,x:()=>r});var i=n(6540);const s={},t=i.createContext(s);function o(e){const l=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:l},e.children)}}}]);