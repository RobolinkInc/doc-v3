(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.4"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.4"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.4"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.4"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}class v extends _{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(v.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||t:void 0})),t&&r&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==v.copyRedirectedCacheableResponsesPlugin&&(a===v.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(v.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}v.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},v.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class m{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new v({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"6d57cfe60fd0740093777194ee685671","url":"404.html"},{"revision":"b5399b78dc8e9521d03cebef88320ef5","url":"assets/css/styles.cd056103.css"},{"revision":"f6ddd923b37b1e2eb097db54e4e40cec","url":"assets/js/01a85c17.74586133.js"},{"revision":"d87961720589868551e634141801c0d8","url":"assets/js/02300d48.38458ad2.js"},{"revision":"70de36e606ee25fe667c35ca19d5ff1f","url":"assets/js/0d1d3360.6f60174a.js"},{"revision":"811aad6b977ae1d52029bf3bfa5fcfc4","url":"assets/js/0e384e19.0b76a368.js"},{"revision":"0748b8fd386dad8c350095e0f09ce791","url":"assets/js/1029a38b.d931c7d3.js"},{"revision":"ea55227024e4b251de80610225094902","url":"assets/js/1227b9db.d8f9de4e.js"},{"revision":"5361fec563eeab745efa697b784bdc42","url":"assets/js/131.91eb30e9.js"},{"revision":"61b0a3f855b436265d1e84d09fc8a09a","url":"assets/js/158f0636.f55685fe.js"},{"revision":"fb7e3ab57c31010442a5c503bce694c9","url":"assets/js/17896441.1e6fa0a2.js"},{"revision":"79089f26fb1761d90e7117c57c46af59","url":"assets/js/199bc3c6.80c94b21.js"},{"revision":"7d5204516c4e456ab0ae574e8ae62b4e","url":"assets/js/1be78505.a7e25e16.js"},{"revision":"def2113ecce988136a3c90cd1b59e241","url":"assets/js/1f391b9e.55d22b66.js"},{"revision":"63675ff36e0795ff84c71d39ad9a4e9d","url":"assets/js/230.e27125f7.js"},{"revision":"a7c3060fcbebdece0451e81afed49f10","url":"assets/js/283.065fbc9c.js"},{"revision":"0eda66ecc2416eede4ae647275598830","url":"assets/js/30a24c52.1eb34315.js"},{"revision":"e6933b961397a272836da0377e39960f","url":"assets/js/339.aa438608.js"},{"revision":"414d3a4b67dd2b9344beea245e741e54","url":"assets/js/343.0c71a0d3.js"},{"revision":"00c11a8d9e1bef0722dee3e7184d346f","url":"assets/js/3720c009.5c313a9a.js"},{"revision":"78917deb43709b294da9e9c3d9297ee3","url":"assets/js/393be207.40eef3d6.js"},{"revision":"73ef015c7671f3c190d30b9fde362993","url":"assets/js/529.4491c660.js"},{"revision":"480df35b35a3e2f30eeeb42b3f6450a4","url":"assets/js/532267fd.af9da254.js"},{"revision":"3ee3d561a4fd4c32f2668201367f8d9f","url":"assets/js/55960ee5.ee8e7346.js"},{"revision":"3ca1983c66663c23d3a2a3d74f186c1c","url":"assets/js/55a52890.ec55bc46.js"},{"revision":"0163b7cdc1c505df87c90f97b298f8d8","url":"assets/js/608ae6a4.5ea5f32f.js"},{"revision":"b2794cefba7606957813883a7fecd998","url":"assets/js/66406991.e59989ea.js"},{"revision":"f28c63704ace585489fdcdc9f3066289","url":"assets/js/6875c492.5dfd7c7e.js"},{"revision":"a72dee84dbf79939319d567c61e0ad30","url":"assets/js/814f3328.dfb7337a.js"},{"revision":"ebf526fedb0c7f0e92c4ced5b91d5e69","url":"assets/js/84a08eca.0a6660c2.js"},{"revision":"d9e31a246e73a741d11aaba84cb089cc","url":"assets/js/85f98a7f.b788f0a4.js"},{"revision":"671f584b4948cdfb84b37ab8b1caaa2f","url":"assets/js/864.c328ee1b.js"},{"revision":"80fdf2cd54befe9bfbc70880d7d9b593","url":"assets/js/878.9aa7539b.js"},{"revision":"cfc4e1ad275f64efad7f0e558302573d","url":"assets/js/935f2afb.3b5362c9.js"},{"revision":"b16785a9985cf490ec402fd211ebffab","url":"assets/js/972.fcabc202.js"},{"revision":"a290605ef467c4f65fa395899edeca2b","url":"assets/js/9e4087bc.5c427f59.js"},{"revision":"f17019561ff45dfc1a60bacdfcae5c0a","url":"assets/js/a424efa6.3d0e0541.js"},{"revision":"aa657b01cbfae52fb7c98dfcb298cc2c","url":"assets/js/a6aa9e1f.0c60b297.js"},{"revision":"cf3e5c31db4aec4d68a9ecfddedb0b86","url":"assets/js/a7023ddc.63aa0b58.js"},{"revision":"ab0d42734615f02ac93d2ac222cac3c8","url":"assets/js/a80da1cf.30ffb4dd.js"},{"revision":"b5c609d2c601293f2eae5ee35dd756ab","url":"assets/js/b2b675dd.7b93e55a.js"},{"revision":"59add328b363f7f7281419360c58f3a6","url":"assets/js/b2f554cd.54215485.js"},{"revision":"0853ad9ec696254f778817191e052e64","url":"assets/js/c4f5d8e4.595b92ce.js"},{"revision":"69e7e33f7fb4b0eeffbca5b8d0fd5c2f","url":"assets/js/ccc49370.c62cfc88.js"},{"revision":"51725710a7bf8b0c0a6f21c63a3574e7","url":"assets/js/cfefbb03.23a2e482.js"},{"revision":"88ec328a21ba9d08756d91d848e8ee4d","url":"assets/js/dc016e2d.b63cd864.js"},{"revision":"7bb1c08b889083c9a2c1c21ba281067f","url":"assets/js/df203c0f.a687ed82.js"},{"revision":"1ca3fb9dfd5161c560eda9d3447a13b6","url":"assets/js/e2a9bd62.32bb65cb.js"},{"revision":"c0f99db31e8d8ddffca83dd0c45609fd","url":"assets/js/ecf890c3.6aec2e80.js"},{"revision":"05fe936406f0e7fc3ceafc924b9f0194","url":"assets/js/main.79e74183.js"},{"revision":"d38f6f87ba641cf93119b7d8b93b2b69","url":"assets/js/runtime~main.57a59bac.js"},{"revision":"51c5b1aa04102f0bda653eadf750d66a","url":"blog/archive/index.html"},{"revision":"e4aab573d13a99a1bdc91b7b6df7cb57","url":"blog/index.html"},{"revision":"3812576874d2fb5045cc37a7d6c3afb3","url":"blog/Introduction/index.html"},{"revision":"ac616930245e5d839eb45a3a61b7c719","url":"blog/tags/co-drone-edu/index.html"},{"revision":"7da826636552e1e339e51960838e36c9","url":"blog/tags/docusaurus/index.html"},{"revision":"4c566d303ca91b753b98414cf19a5a82","url":"blog/tags/hello/index.html"},{"revision":"c50f4091f47e0e8c06411b6baaca0fc7","url":"blog/tags/index.html"},{"revision":"9aeea008c5f0a52a7abe57fcac2a8605","url":"blog/tags/robolink/index.html"},{"revision":"c9e797163d9083550184f9aa17f8a9ff","url":"docs/CoDroneEDU/codron-explain/index.html"},{"revision":"66f38bc694916f6cb2a3dc96bafb57a0","url":"docs/CoDroneEDU/function/index.html"},{"revision":"c0f9dc9b18745ba50ccbb6e11459b6c9","url":"docs/CoDroneEDU/index.html"},{"revision":"611baa596d156ca9a40d44611587d4d9","url":"docs/intro/index.html"},{"revision":"3532545109bda9abdced1f417732d1e6","url":"docs/tags/co-drone-edu/index.html"},{"revision":"12439026663fda8e8fa04493531d3828","url":"docs/tags/index.html"},{"revision":"d2e536f158a8467c0161cbfcfe78196d","url":"docs/tags/robolink/index.html"},{"revision":"cd0fb4aea8610152a19ba3fca9ff9b44","url":"docs/Zumi/index.html"},{"revision":"b179815355f48a52d6794e6316487cec","url":"index.html"},{"revision":"e165a6b4fec7a2c66ce97d1fbf3e08a1","url":"lunr-index-1687440046426.json"},{"revision":"e165a6b4fec7a2c66ce97d1fbf3e08a1","url":"lunr-index.json"},{"revision":"e234850285eb7be3ae0219257e687972","url":"manifest.json"},{"revision":"b2e2b5b04c513dd7250d804078b52eb1","url":"markdown-page/index.html"},{"revision":"75380764b18755d96a22d4580bcbaa4c","url":"search-doc-1687440046426.json"},{"revision":"75380764b18755d96a22d4580bcbaa4c","url":"search-doc.json"},{"revision":"000de4a48405bd21b7eec1abc07ede6c","url":"img/docusaurus-social-card.jpg"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"4343e07bf942aefb5f334501958fbc0e","url":"img/favicon.ico"},{"revision":"70758cf026b374464ca8f3db8a4ec82f","url":"img/icons/rblk_favicon-32x32.png"},{"revision":"9afe0e07eb61f5a654266a0a5f319e16","url":"img/icons/rblk_favicon-android-chrome-128x128.png"},{"revision":"0016cf952f7e1c671c2396fbd56b3d06","url":"img/icons/rblk_favicon-android-chrome-144x144.png"},{"revision":"98e5daa3c2dbfbe4f2c42c20ec235226","url":"img/icons/rblk_favicon-android-chrome-152x152.png"},{"revision":"ede8bacea1444f89a191bf69b526e2b9","url":"img/icons/rblk_favicon-android-chrome-192x192.png"},{"revision":"5dacaa8fa937429443c8ecbac710523b","url":"img/icons/rblk_favicon-android-chrome-384x384.png"},{"revision":"b920c6e053066daba761c76a62bf1942","url":"img/icons/rblk_favicon-android-chrome-512X512.png"},{"revision":"af18b9d1148c60dd269fc5f5252f95b9","url":"img/icons/rblk_favicon-android-chrome-72x72.png"},{"revision":"5a93e254d94fd8bb188cd92b4f2eeb00","url":"img/icons/rblk_favicon-android-chrome-96x96.png"},{"revision":"aa4fa2cdc39d33f2ee3b8f245b6d30d9","url":"img/logo.svg"},{"revision":"a6b83d7b4c3cf36cb21eb7a9721716dd","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"b64ae8e3c10e5ff2ec85a653cfe6edf8","url":"img/undraw_docusaurus_react.svg"},{"revision":"8fa6e79a15c385d7b2dc4bb761a2e9e3","url":"img/undraw_docusaurus_tree.svg"}],s=new m({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();