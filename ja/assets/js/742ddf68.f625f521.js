"use strict";(self.webpackChunkdoc_v_3=self.webpackChunkdoc_v_3||[]).push([[401],{8374:(e,r,l)=>{l.r(r),l.d(r,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>o});var s=l(5893),i=l(1151);const n={title:"Senior Block Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},d=void 0,a={id:"CoDroneEDU/Blockly/page4",title:"Senior Block Documentation",description:"window.print()}>Print",source:"@site/docs/CoDroneEDU/Blockly/page4.md",sourceDirName:"CoDroneEDU/Blockly",slug:"/CoDroneEDU/Blockly/page4",permalink:"/ja/docs/CoDroneEDU/Blockly/page4",draft:!1,unlisted:!1,editUrl:"https://github.com/RobolinkInc/doc-v3/tree/main/docs/docs/CoDroneEDU/Blockly/page4.md",tags:[],version:"current",frontMatter:{title:"Senior Block Documentation",customHeadElements:['<link rel="manifest" href="manifest.json" />']},sidebar:"CoDroneEDU",previous:{title:"Junior Block Documentation",permalink:"/ja/docs/CoDroneEDU/Blockly/page3"},next:{title:"Blockly Changelog",permalink:"/ja/docs/CoDroneEDU/Blockly/page5"}},t={},o=[{value:"Flight Commands",id:"flight-commands",level:2},{value:"take_off()",id:"take_off",level:3},{value:"Block",id:"block",level:4},{value:"Code",id:"code",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Description",id:"description",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"land()",id:"land",level:3},{value:"Block",id:"block-1",level:4},{value:"Code",id:"code-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example-1",level:4},{value:"emergency_stop()",id:"emergency_stop",level:3},{value:"Block",id:"block-2",level:4},{value:"Code",id:"code-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Example",id:"example-2",level:4},{value:"hover()",id:"hover",level:3},{value:"Block",id:"block-3",level:4},{value:"Code",id:"code-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Example",id:"example-3",level:4},{value:"move()",id:"move",level:3},{value:"Block",id:"block-4",level:4},{value:"Code",id:"code-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Example",id:"example-4",level:4},{value:"flip()",id:"flip",level:3},{value:"Block",id:"block-5",level:4},{value:"Code",id:"code-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Example",id:"example-5",level:4},{value:"turn_degree()",id:"turn_degree",level:3},{value:"Block",id:"block-6",level:4},{value:"Code",id:"code-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Description",id:"description-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Example",id:"example-6",level:4},{value:"turn_left() / turn_right()",id:"turn_left--turn_right",level:3},{value:"Block",id:"block-7",level:4},{value:"Code",id:"code-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Description",id:"description-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Example",id:"example-7",level:4},{value:"avoid_wall()",id:"avoid_wall",level:3},{value:"Block",id:"block-8",level:4},{value:"Code",id:"code-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Example",id:"example-8",level:4},{value:"Flight Variables",id:"flight-variables",level:2},{value:"set_roll()",id:"set_roll",level:3},{value:"Block",id:"block-9",level:4},{value:"Code",id:"code-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Example",id:"example-9",level:4},{value:"set_pitch()",id:"set_pitch",level:3},{value:"Block",id:"block-10",level:4},{value:"Code",id:"code-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Description",id:"description-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Example",id:"example-10",level:4},{value:"set_yaw()",id:"set_yaw",level:3},{value:"Block",id:"block-11",level:4},{value:"Code",id:"code-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Description",id:"description-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Example",id:"example-11",level:4},{value:"set_throttle()",id:"set_throttle",level:3},{value:"Block",id:"block-12",level:4},{value:"Code",id:"code-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Description",id:"description-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Example",id:"example-12",level:4},{value:"move()",id:"move-1",level:3},{value:"Block",id:"block-13",level:4},{value:"Code",id:"code-13",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Description",id:"description-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Example",id:"example-13",level:4},{value:"move(duration)",id:"moveduration",level:3},{value:"Block",id:"block-14",level:4},{value:"Code",id:"code-14",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Description",id:"description-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Example",id:"example-14",level:4},{value:"set_trim()",id:"set_trim",level:3},{value:"Block",id:"block-15",level:4},{value:"Code",id:"code-15",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Description",id:"description-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Example",id:"example-15",level:4},{value:"get_trim()",id:"get_trim",level:3},{value:"Block",id:"block-16",level:4},{value:"Code",id:"code-16",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Description",id:"description-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Example",id:"example-16",level:4},{value:"reset_trim()",id:"reset_trim",level:3},{value:"Block",id:"block-17",level:4},{value:"Code",id:"code-17",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Description",id:"description-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Example",id:"example-17",level:4},{value:"Status Checkers",id:"status-checkers",level:2},{value:"code_is_running()",id:"code_is_running",level:3},{value:"Block",id:"block-18",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Description",id:"description-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Example",id:"example-18",level:4},{value:"Lights",id:"lights",level:2},{value:"set_drone_LED()",id:"set_drone_led",level:3},{value:"Block",id:"block-19",level:4},{value:"Code",id:"code-18",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Description",id:"description-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Example",id:"example-19",level:4},{value:"drone_LED_off()",id:"drone_led_off",level:3},{value:"Block",id:"block-20",level:4},{value:"Code",id:"code-19",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Description",id:"description-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Example",id:"example-20",level:4},{value:"set_controller_LED()",id:"set_controller_led",level:3},{value:"Block",id:"block-21",level:4},{value:"Code",id:"code-20",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Description",id:"description-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Example",id:"example-21",level:4},{value:"controller_LED_off()",id:"controller_led_off",level:3},{value:"Block",id:"block-22",level:4},{value:"Code",id:"code-21",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Description",id:"description-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Example",id:"example-22",level:4},{value:"Sensors",id:"sensors",level:2},{value:"get_range()",id:"get_range",level:3},{value:"Block",id:"block-23",level:4},{value:"Code",id:"code-22",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Description",id:"description-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Example",id:"example-23",level:4},{value:"get_angle()",id:"get_angle",level:3},{value:"Block",id:"block-24",level:4},{value:"Code",id:"code-23",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Description",id:"description-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Example",id:"example-24",level:4},{value:"get_angular_speed()",id:"get_angular_speed",level:3},{value:"Block",id:"block-25",level:4},{value:"Code",id:"code-24",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Description",id:"description-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Example",id:"example-25",level:4},{value:"get_accel()",id:"get_accel",level:3},{value:"Block",id:"block-26",level:4},{value:"Code",id:"code-25",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Description",id:"description-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Example",id:"example-26",level:4},{value:"get_pos()",id:"get_pos",level:3},{value:"Block",id:"block-27",level:4},{value:"Code",id:"code-26",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Description",id:"description-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Example",id:"example-27",level:4},{value:"get_battery()",id:"get_battery",level:3},{value:"Block",id:"block-28",level:4},{value:"Code",id:"code-27",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Description",id:"description-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Example",id:"example-28",level:4},{value:"get_height()",id:"get_height",level:3},{value:"Block",id:"block-29",level:4},{value:"Code",id:"code-28",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Description",id:"description-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Example",id:"example-29",level:4},{value:"get_pressure()",id:"get_pressure",level:3},{value:"Block",id:"block-30",level:4},{value:"Code",id:"code-29",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Description",id:"description-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Example",id:"example-30",level:4},{value:"get_temperature()",id:"get_temperature",level:3},{value:"Block",id:"block-31",level:4},{value:"Code",id:"code-30",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"Description",id:"description-31",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Example",id:"example-31",level:4},{value:"get_elevation()",id:"get_elevation",level:3},{value:"Block",id:"block-32",level:4},{value:"Code",id:"code-31",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Description",id:"description-32",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Example",id:"example-32",level:4},{value:"get_color()",id:"get_color",level:3},{value:"Block",id:"block-33",level:4},{value:"Code",id:"code-32",level:4},{value:"Parameters",id:"parameters-33",level:4},{value:"Description",id:"description-33",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Example",id:"example-33",level:4},{value:"get_hsvl()",id:"get_hsvl",level:3},{value:"Block",id:"block-34",level:4},{value:"Code",id:"code-33",level:4},{value:"Parameters",id:"parameters-34",level:4},{value:"Description",id:"description-34",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Example",id:"example-34",level:4},{value:"get_state_data()",id:"get_state_data",level:3},{value:"Block",id:"block-35",level:4},{value:"Code",id:"code-34",level:4},{value:"Parameters",id:"parameters-35",level:4},{value:"Description",id:"description-35",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Example",id:"example-35",level:4},{value:"reset_sensor()",id:"reset_sensor",level:3},{value:"Block",id:"block-36",level:4},{value:"Code",id:"code-35",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"Description",id:"description-36",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Example",id:"example-36",level:4},{value:"Sound",id:"sound",level:2},{value:"drone_buzzer()",id:"drone_buzzer",level:3},{value:"Block",id:"block-37",level:4},{value:"Code",id:"code-36",level:4},{value:"Parameters",id:"parameters-37",level:4},{value:"Description",id:"description-37",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Example",id:"example-37",level:4},{value:"controller_buzzer()",id:"controller_buzzer",level:3},{value:"Block",id:"block-38",level:4},{value:"Code",id:"code-37",level:4},{value:"Parameters",id:"parameters-38",level:4},{value:"Description",id:"description-38",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Example",id:"example-38",level:4},{value:"drone_buzzer_hertz()",id:"drone_buzzer_hertz",level:3},{value:"Block",id:"block-39",level:4},{value:"Code",id:"code-38",level:4},{value:"Parameters",id:"parameters-39",level:4},{value:"Description",id:"description-39",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Example",id:"example-39",level:4},{value:"controller_buzzer_hertz()",id:"controller_buzzer_hertz",level:3},{value:"Block",id:"block-40",level:4},{value:"Code",id:"code-39",level:4},{value:"Parameters",id:"parameters-40",level:4},{value:"Description",id:"description-40",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Example",id:"example-40",level:4},{value:"Screen",id:"screen",level:2},{value:"controller_draw_line()",id:"controller_draw_line",level:3},{value:"Block",id:"block-41",level:4},{value:"Code",id:"code-40",level:4},{value:"Parameters",id:"parameters-41",level:4},{value:"Description",id:"description-41",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Example",id:"example-41",level:4},{value:"controller_draw_string()",id:"controller_draw_string",level:3},{value:"Block",id:"block-42",level:4},{value:"Code",id:"code-41",level:4},{value:"Parameters",id:"parameters-42",level:4},{value:"Description",id:"description-42",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Example",id:"example-42",level:4},{value:"controller_draw_rectangle()",id:"controller_draw_rectangle",level:3},{value:"Block",id:"block-43",level:4},{value:"Code",id:"code-42",level:4},{value:"Parameters",id:"parameters-43",level:4},{value:"Description",id:"description-43",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Example",id:"example-43",level:4},{value:"controller_draw_square()",id:"controller_draw_square",level:3},{value:"Block",id:"block-44",level:4},{value:"Code",id:"code-43",level:4},{value:"Parameters",id:"parameters-44",level:4},{value:"Description",id:"description-44",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Example",id:"example-44",level:4},{value:"controller_draw_point()",id:"controller_draw_point",level:3},{value:"Block",id:"block-45",level:4},{value:"Code",id:"code-44",level:4},{value:"Parameters",id:"parameters-45",level:4},{value:"Description",id:"description-45",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Example",id:"example-45",level:4},{value:"controller_clear_screen()",id:"controller_clear_screen",level:3},{value:"Block",id:"block-46",level:4},{value:"Code",id:"code-45",level:4},{value:"Parameters",id:"parameters-46",level:4},{value:"Description",id:"description-46",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Example",id:"example-46",level:4}];function c(e){const r={admonition:"admonition",annotation:"annotation",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)("div",{className:"level3_body",children:[(0,s.jsx)("div",{className:"print_div",children:(0,s.jsx)("button",{id:"print_page",onClick:()=>window.print(),children:"Print"})}),(0,s.jsx)(r.h2,{id:"flight-commands",children:"Flight Commands"}),(0,s.jsx)(r.h3,{id:"take_off",children:"take_off()"}),(0,s.jsx)(r.h4,{id:"block",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off.png",width:"120px"}),(0,s.jsx)(r.h4,{id:"code",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"takeoff()"}),(0,s.jsx)(r.h4,{id:"parameters",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description",children:"Description"}),(0,s.jsx)(r.p,{children:"This functions makes the drone take off. CoDrone EDU takes off at an average height of 1 meter off the ground. A takeoff block must be used before any other flight command or flight movement."}),(0,s.jsx)(r.h4,{id:"returns",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off_hover_land.png",width:"240px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"land",children:"land()"}),(0,s.jsx)(r.h4,{id:"block-1",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/land.png",width:"120px"}),(0,s.jsx)(r.h4,{id:"code-1",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"land()"}),(0,s.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-1",children:"Description"}),(0,s.jsx)(r.p,{children:"This function makes the drone land by throttling down safely."}),(0,s.jsx)(r.h4,{id:"returns-1",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-1",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off_hover_land.png",width:"240px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"emergency_stop",children:"emergency_stop()"}),(0,s.jsx)(r.h4,{id:"block-2",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/emergencystop.png",width:"160px"}),(0,s.jsx)(r.h4,{id:"code-2",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"emergency_stop()"}),(0,s.jsx)(r.h4,{id:"parameters-2",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-2",children:"Description"}),(0,s.jsx)(r.p,{children:"Stops all commands to motors. The drone will stop flying immediately."}),(0,s.jsx)(r.h4,{id:"returns-2",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-2",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/emergency_stop_example.png",width:"150px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"hover",children:"hover()"}),(0,s.jsx)(r.h4,{id:"block-3",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/hover.png",width:"150px"}),(0,s.jsx)(r.h4,{id:"code-3",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"hover()"}),(0,s.jsx)(r.h4,{id:"parameters-3",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"duration:"})," positive integer in seconds"]}),(0,s.jsx)(r.h4,{id:"description-3",children:"Description"}),(0,s.jsx)(r.p,{children:"This function makes the drone hover in place for a duration in seconds."}),(0,s.jsx)(r.h4,{id:"returns-3",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-3",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/take_off_hover_land.png",width:"240px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"move",children:"move()"}),(0,s.jsx)(r.h4,{id:"block-4",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move.png",width:"460px"}),(0,s.jsx)(r.h4,{id:"code-4",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"move()"}),(0,s.jsx)(r.h4,{id:"parameters-4",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"roll:"})," roll power percentage as an integer between -100 and +100",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"pitch:"})," pitch power percentage as an integer between -100 and +100",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"yaw:"})," yaw power percentage as an integer between -100 and +100",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"throttle:"})," throttle power percentage as an integer between -100 and +100",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"duration:"})," positive integer in seconds"]}),(0,s.jsx)(r.h4,{id:"description-4",children:"Description"}),(0,s.jsx)(r.p,{children:"Moves the drone for a certain amount of time (in seconds) in a given direction determined by the flight parameters."}),(0,s.jsx)(r.h4,{id:"returns-4",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-4",children:"Example"}),(0,s.jsx)(r.p,{children:"In this example, roll and pitch are both set to positive 30% while yaw and throttle remain at 0%. CoDrone EDU will fly forward and to the right (diagonally) for 1 second at 30% speed."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move-example.png",width:"480px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"flip",children:"flip()"}),(0,s.jsx)(r.h4,{id:"block-5",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/flip.png",width:"180px"}),(0,s.jsx)(r.h4,{id:"code-5",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"flip()"}),(0,s.jsx)(r.h4,{id:"parameters-5",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/flip_params.png",width:"180px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"direction:"})," back, front, right, left"]}),(0,s.jsx)(r.h4,{id:"description-5",children:"Description"}),(0,s.jsx)(r.p,{children:"This functions makes the drone flip back, front, right, or left. Make sure your battery percentage is over 50% for the flip to execute."}),(0,s.jsx)(r.h4,{id:"returns-5",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-5",children:"Example"}),(0,s.jsx)(r.p,{children:"Add a hover or delay block after the flip if you need to stabilize before your next command. The drone takes 3-4 seconds after a flip before it can do another flight command."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/flip_example.png",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"turn_degree",children:"turn_degree()"}),(0,s.jsx)(r.h4,{id:"block-6",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree.png",width:"200px"}),(0,s.jsx)(r.h4,{id:"code-6",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"turn_degree()"}),(0,s.jsx)(r.h4,{id:"parameters-6",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"degrees:"})," integer from -180 to +180"]}),(0,s.jsx)(r.h4,{id:"description-6",children:"Description"}),(0,s.jsx)(r.p,{children:"Turns right or left with absolute reference frame to drone's initial heading. Positive degrees turn to right and negative degrees turn to the left. When the drone pairs after powering on, the current heading will be set as 0 degrees."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/CDE_heading.jpg",width:"300px"}),(0,s.jsx)(r.h4,{id:"returns-6",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-6",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree_example.png",width:"240px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"turn_left--turn_right",children:"turn_left() / turn_right()"}),(0,s.jsx)(r.h4,{id:"block-7",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree.png",width:"210px"}),(0,s.jsx)(r.h4,{id:"code-7",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"turn_left()"}),(0,s.jsx)("br",{}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"turn_right()"}),(0,s.jsx)(r.h4,{id:"parameters-7",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"degrees:"})," positive integer from 0 to 180"]}),(0,s.jsx)(r.h4,{id:"description-7",children:"Description"}),(0,s.jsx)(r.p,{children:"Turns right or left relative to the drone's current heading."}),(0,s.jsx)(r.h4,{id:"returns-7",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-7",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/turn_degree_example.png",width:"240px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"avoid_wall",children:"avoid_wall()"}),(0,s.jsx)(r.h4,{id:"block-8",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/avoid_wall.png",width:"260px"}),(0,s.jsx)(r.h4,{id:"code-8",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"avoid_wall()"}),(0,s.jsx)(r.h4,{id:"parameters-8",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"timeout:"})," positive integer timeout duration in seconds",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"distance:"})," positive integer in centimeters"]}),(0,s.jsx)(r.h4,{id:"description-8",children:"Description"}),(0,s.jsx)(r.p,{children:"CoDrone EDU will fly forward and stop when an obstacle is detected a given distance away (in centimeters). The block will run until the timeout (in seconds) is finished or the obstacle is found, whichever comes first. The default timeout is 10 seconds for an obstacle detected 20cm away."}),(0,s.jsx)(r.h4,{id:"returns-8",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-8",children:"Example"}),(0,s.jsx)(r.p,{children:"Place the drone on the floor a few feet away from a wall. When you run the code, the drone will fly forward until the wall is detected 30 centimeters away. The next block will immediately execute. In this case, the drone will land."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/avoid_wall_example.png",width:"280px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h2,{id:"flight-variables",children:"Flight Variables"}),(0,s.jsx)(r.h3,{id:"set_roll",children:"set_roll()"}),(0,s.jsx)(r.h4,{id:"block-9",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_roll.png",width:"180px"}),(0,s.jsx)(r.h4,{id:"code-9",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"set_roll()"}),(0,s.jsx)(r.h4,{id:"parameters-9",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),(0,s.jsx)(r.h4,{id:"description-9",children:"Description"}),(0,s.jsx)(r.p,{children:"This function sets the roll direction variable but will not send a move command. Negative values will move the drone to the left and positive values will move the drone to the right."}),(0,s.jsx)(r.h4,{id:"returns-9",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-9",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_roll_example.png",width:"180px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"set_pitch",children:"set_pitch()"}),(0,s.jsx)(r.h4,{id:"block-10",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_pitch.png",width:"180px"}),(0,s.jsx)(r.h4,{id:"code-10",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"set_pitch()"}),(0,s.jsx)(r.h4,{id:"parameters-10",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),(0,s.jsx)(r.h4,{id:"description-10",children:"Description"}),(0,s.jsx)(r.p,{children:"This function sets the pitch direction variable but will not send a move command. Negative values will move the drone backward and positive values will move the drone forward."}),(0,s.jsx)(r.h4,{id:"returns-10",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-10",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_pitch_example.png",width:"180px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"set_yaw",children:"set_yaw()"}),(0,s.jsx)(r.h4,{id:"block-11",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_yaw.png",width:"180px"}),(0,s.jsx)(r.h4,{id:"code-11",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"set_yaw()"}),(0,s.jsx)(r.h4,{id:"parameters-11",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),(0,s.jsx)(r.h4,{id:"description-11",children:"Description"}),(0,s.jsx)(r.p,{children:"This function sets the yaw direction variable but will not send a move command. Negative values will turn the drone to the right and positive values will turn the drone to the left."}),(0,s.jsx)(r.h4,{id:"returns-11",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-11",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_yaw_example.png",width:"180px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"set_throttle",children:"set_throttle()"}),(0,s.jsx)(r.h4,{id:"block-12",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_throttle.png",width:"240px"}),(0,s.jsx)(r.h4,{id:"code-12",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"set_throttle()"}),(0,s.jsx)(r.h4,{id:"parameters-12",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"power:"})," integer between -100 and 100"]}),(0,s.jsx)(r.h4,{id:"description-12",children:"Description"}),(0,s.jsx)(r.p,{children:"This function sets the throttle direction variable but will not send a move command. Negative values will move the drone downward and positive values will move the drone upward."}),(0,s.jsx)(r.h4,{id:"returns-12",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-12",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_throttle_example.png",width:"240px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"move-1",children:"move()"}),(0,s.jsx)(r.h4,{id:"block-13",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_no_params.png",width:"80px"}),(0,s.jsx)(r.h4,{id:"code-13",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"move()"}),(0,s.jsx)(r.h4,{id:"parameters-13",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-13",children:"Description"}),(0,s.jsx)(r.p,{children:"Moves CoDrone EDU in the direction set by the flight variables with the smallest duration possible (about 0.01 seconds). Since it has no specified duration, it is often used inside of a loop to check sensors simultaneously."}),(0,s.jsx)(r.h4,{id:"returns-13",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-13",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_no_params_example.png",width:"400px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"moveduration",children:"move(duration)"}),(0,s.jsx)(r.h4,{id:"block-14",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_with_params.png",width:"160px"}),(0,s.jsx)(r.h4,{id:"code-14",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"move()"}),(0,s.jsx)(r.h4,{id:"parameters-14",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"duration:"})," positive integer in seconds"]}),(0,s.jsx)(r.h4,{id:"description-14",children:"Description"}),(0,s.jsx)(r.p,{children:"Moves CoDrone EDU for a duration in seconds in the direction set by the flight variables."}),(0,s.jsx)(r.h4,{id:"returns-14",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-14",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/move_with_params_example.png",width:"200px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"set_trim",children:"set_trim()"}),(0,s.jsx)(r.h4,{id:"block-15",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_trim.png",width:"240px"}),(0,s.jsx)(r.h4,{id:"code-15",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"set_trim()"}),(0,s.jsx)(r.h4,{id:"parameters-15",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_trim_params.png",width:"280px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"roll:"})," integer between -100 and 100",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"pitch:"})," integer between -100 and 100"]}),(0,s.jsx)(r.h4,{id:"description-15",children:"Description"}),(0,s.jsx)(r.p,{children:"Sets the trim values to adjust for any drifting while CoDrone EDU is flying. Set the trim values in the opposite direction of drift. For example, if the drone is drifting to the right, set roll to a negative value."}),(0,s.jsx)(r.h4,{id:"returns-15",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-15",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_trim_example.png",width:"280px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_trim",children:"get_trim()"}),(0,s.jsx)(r.h4,{id:"block-16",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_trim.png",width:"120px"}),(0,s.jsx)(r.h4,{id:"code-16",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_trim()"}),(0,s.jsx)(r.h4,{id:"parameters-16",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"roll:"})," integer between -100 and 100",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"pitch:"})," integer between -100 and 100"]}),(0,s.jsx)(r.h4,{id:"description-16",children:"Description"}),(0,s.jsx)(r.p,{children:"Returns the current trim values. Combine with a print statement to see the results printed to the console."}),(0,s.jsx)(r.h4,{id:"returns-16",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-16",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_trim_example.png",width:"280px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"reset_trim",children:"reset_trim()"}),(0,s.jsx)(r.h4,{id:"block-17",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/reset_trim.png",width:"120px"}),(0,s.jsx)(r.h4,{id:"code-17",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"reset_trim()"}),(0,s.jsx)(r.h4,{id:"parameters-17",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-17",children:"Description"}),(0,s.jsx)(r.p,{children:"Resets the trim values to (0,0)."}),(0,s.jsx)(r.h4,{id:"returns-17",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-17",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/reset_trim_example.png",width:"280px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h2,{id:"status-checkers",children:"Status Checkers"}),(0,s.jsx)(r.h3,{id:"code_is_running",children:"code_is_running()"}),(0,s.jsx)(r.h4,{id:"block-18",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/code_is_running.png",width:"160px"}),(0,s.jsx)(r.h4,{id:"parameters-18",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-18",children:"Description"}),(0,s.jsxs)(r.p,{children:['Returns a True value while your code is running. Use this block instead of "while True" when you want to run a "forever" loop. Use the "Stop" button in Blockly to stop the program.',(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Note:"})," There is no Python equivalent code_is_running() function. Use a while True loop in Python."]}),(0,s.jsx)(r.h4,{id:"returns-18",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Boolean:"}),' returns true if program is running, false if user presses "Stop"']}),(0,s.jsx)(r.h4,{id:"example-18",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/code_is_running_example.png",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h2,{id:"lights",children:"Lights"}),(0,s.jsx)(r.h3,{id:"set_drone_led",children:"set_drone_LED()"}),(0,s.jsx)(r.h4,{id:"block-19",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_drone_led.png",width:"450px"}),(0,s.jsx)(r.h4,{id:"code-18",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"set_drone_LED()"}),(0,s.jsx)(r.h4,{id:"parameters-19",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_drone_led_params.png",width:"500px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"red:"})," positive integer between 0 and 255",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"green:"})," positive integer between 0 and 255",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"blue:"})," positive integer between 0 and 255",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"brightness:"})," positive between 0 and 255"]}),(0,s.jsx)(r.h4,{id:"description-19",children:"Description"}),(0,s.jsx)(r.p,{children:"Sets the color of CoDrone EDU's LED. Colors are set by using its RGB (red, green, blue) equivalent values."}),(0,s.jsx)(r.h4,{id:"returns-19",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-19",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_drone_led_example.png",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"drone_led_off",children:"drone_LED_off()"}),(0,s.jsx)(r.h4,{id:"block-20",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_led_off.png",width:"150px"}),(0,s.jsx)(r.h4,{id:"code-19",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"drone_LED_off()"}),(0,s.jsx)(r.h4,{id:"parameters-20",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-20",children:"Description"}),(0,s.jsx)(r.p,{children:"Turns off CoDrone EDU's LED."}),(0,s.jsx)(r.h4,{id:"returns-20",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-20",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_led_off_example.png",width:"480px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"set_controller_led",children:"set_controller_LED()"}),(0,s.jsx)(r.h4,{id:"block-21",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_controller_led.png",width:"450px"}),(0,s.jsx)(r.h4,{id:"code-20",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"set_controller_LED()"}),(0,s.jsx)(r.h4,{id:"parameters-21",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_controller_led_params.png",width:"500px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"red:"})," positive integer between 0 and 255",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"green:"})," positive integer between 0 and 255",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"blue:"})," positive integer between 0 and 255",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"brightness:"})," positive integer between 0 and 255"]}),(0,s.jsx)(r.h4,{id:"description-21",children:"Description"}),(0,s.jsx)(r.p,{children:"Sets the color of CoDrone EDU's controller LED. Colors are set by using its RGB (red, green, blue) equivalent values."}),(0,s.jsx)(r.h4,{id:"returns-21",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-21",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/set_controller_led_example.png",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_led_off",children:"controller_LED_off()"}),(0,s.jsx)(r.h4,{id:"block-22",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_led_off.png",width:"180px"}),(0,s.jsx)(r.h4,{id:"code-21",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_LED_off()"}),(0,s.jsx)(r.h4,{id:"parameters-22",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-22",children:"Description"}),(0,s.jsx)(r.p,{children:"Turns off the CoDrone EDU's controller LED."}),(0,s.jsx)(r.h4,{id:"returns-22",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-22",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_led_off_example.png",width:"480px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h2,{id:"sensors",children:"Sensors"}),(0,s.jsx)(r.h3,{id:"get_range",children:"get_range()"}),(0,s.jsx)(r.h4,{id:"block-23",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_range.png",width:"250px"}),(0,s.jsx)(r.h4,{id:"code-22",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_range()"}),(0,s.jsx)(r.h4,{id:"parameters-23",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_range_params1.png",width:"250px"}),(0,s.jsx)("br",{}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_range_params2.png",width:"250px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"type:"})," front, bottom",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"unit:"})," cm, mm, in, m"]}),(0,s.jsx)(r.h4,{id:"description-23",children:"Description"}),(0,s.jsx)(r.p,{children:"Returns the calculated distance from either the front or bottom infrared (IR) range sensor to the surface. The sensor range is up to 1.5m."}),(0,s.jsx)(r.h4,{id:"returns-23",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"distance:"})," float value in the units selected"]}),(0,s.jsx)(r.h4,{id:"example-23",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_range_example.png",width:"350px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_angle",children:"get_angle()"}),(0,s.jsx)(r.h4,{id:"block-24",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_angle.png",width:"180px"}),(0,s.jsx)(r.h4,{id:"code-23",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_angle()"}),(0,s.jsx)(r.h4,{id:"parameters-24",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_angle_params.png",width:"200px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"axis:"})," x, y, z"]}),(0,s.jsx)(r.h4,{id:"description-24",children:"Description"}),(0,s.jsx)(r.p,{children:"This function returns the current gyroscope angle measurement for either the x (roll),y (pitch),or z (yaw) axis."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/xyz.jpg",width:"350px"}),(0,s.jsx)(r.h4,{id:"returns-24",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"angle:"})," integer in degrees"]}),(0,s.jsx)(r.h4,{id:"example-24",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_angle_ex.png",width:"420px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_angular_speed",children:"get_angular_speed()"}),(0,s.jsx)(r.h4,{id:"block-25",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_angular_speed.png",width:"240px"}),(0,s.jsx)(r.h4,{id:"code-24",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_angular_speed()"}),(0,s.jsx)(r.h4,{id:"parameters-25",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_angular_speed_params.png",width:"280px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"type:"})," x, y, z"]}),(0,s.jsx)(r.h4,{id:"description-25",children:"Description"}),(0,s.jsx)(r.p,{children:"This function returns the current angular velocity in degrees per second for either the x (roll),y (pitch), or z (yaw) axis."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/xyz.jpg",width:"350px"}),(0,s.jsx)(r.h4,{id:"returns-25",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"angular velocity:"})," integer in degrees per second"]}),(0,s.jsx)(r.h4,{id:"example-25",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_angular_speed_ex.png",width:"480px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_accel",children:"get_accel()"}),(0,s.jsx)(r.h4,{id:"block-26",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_accel.png",width:"190px"}),(0,s.jsx)(r.h4,{id:"code-25",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_accel()"}),(0,s.jsx)(r.h4,{id:"parameters-26",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_accel_params.png",width:"210px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"type:"})," x, y, z"]}),(0,s.jsx)(r.h4,{id:"description-26",children:"Description"}),(0,s.jsxs)(r.p,{children:["This function returns the current acceleration on either the x, y, or z axis in units of ",(0,s.jsxs)(r.span,{className:"katex",children:[(0,s.jsx)(r.span,{className:"katex-mathml",children:(0,s.jsx)(r.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(r.semantics,{children:[(0,s.jsxs)(r.mrow,{children:[(0,s.jsx)(r.mi,{children:"m"}),(0,s.jsx)(r.mi,{mathvariant:"normal",children:"/"}),(0,s.jsxs)(r.msup,{children:[(0,s.jsx)(r.mi,{children:"s"}),(0,s.jsx)(r.mn,{children:"2"})]}),(0,s.jsx)(r.mo,{children:"\u2217"}),(0,s.jsx)(r.mn,{children:"10"})]}),(0,s.jsx)(r.annotation,{encoding:"application/x-tex",children:"m/s^2*10"})]})})}),(0,s.jsxs)(r.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(r.span,{className:"base",children:[(0,s.jsx)(r.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"m"}),(0,s.jsx)(r.span,{className:"mord",children:"/"}),(0,s.jsxs)(r.span,{className:"mord",children:[(0,s.jsx)(r.span,{className:"mord mathnormal",children:"s"}),(0,s.jsx)(r.span,{className:"msupsub",children:(0,s.jsx)(r.span,{className:"vlist-t",children:(0,s.jsx)(r.span,{className:"vlist-r",children:(0,s.jsx)(r.span,{className:"vlist",style:{height:"0.8141em"},children:(0,s.jsxs)(r.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(r.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(r.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(r.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,s.jsx)(r.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.jsx)(r.span,{className:"mbin",children:"\u2217"}),(0,s.jsx)(r.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,s.jsxs)(r.span,{className:"base",children:[(0,s.jsx)(r.span,{className:"strut",style:{height:"0.6444em"}}),(0,s.jsx)(r.span,{className:"mord",children:"10"})]})]})]}),".",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Note:"})," ",(0,s.jsx)(r.em,{children:"1g"})," = ",(0,s.jsxs)(r.span,{className:"katex",children:[(0,s.jsx)(r.span,{className:"katex-mathml",children:(0,s.jsx)(r.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(r.semantics,{children:[(0,s.jsxs)(r.mrow,{children:[(0,s.jsx)(r.mn,{children:"9.8"}),(0,s.jsx)(r.mi,{children:"m"}),(0,s.jsx)(r.mi,{mathvariant:"normal",children:"/"}),(0,s.jsxs)(r.msup,{children:[(0,s.jsx)(r.mi,{children:"s"}),(0,s.jsx)(r.mn,{children:"2"})]})]}),(0,s.jsx)(r.annotation,{encoding:"application/x-tex",children:"9.8m/s^2"})]})})}),(0,s.jsx)(r.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(r.span,{className:"base",children:[(0,s.jsx)(r.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.jsx)(r.span,{className:"mord",children:"9.8"}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"m"}),(0,s.jsx)(r.span,{className:"mord",children:"/"}),(0,s.jsxs)(r.span,{className:"mord",children:[(0,s.jsx)(r.span,{className:"mord mathnormal",children:"s"}),(0,s.jsx)(r.span,{className:"msupsub",children:(0,s.jsx)(r.span,{className:"vlist-t",children:(0,s.jsx)(r.span,{className:"vlist-r",children:(0,s.jsx)(r.span,{className:"vlist",style:{height:"0.8141em"},children:(0,s.jsxs)(r.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(r.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(r.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(r.span,{className:"mord mtight",children:"2"})})]})})})})})]})]})})]})]}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/xyz.jpg",width:"350px"}),(0,s.jsx)(r.h4,{id:"returns-26",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"acceleration:"})," positive or negative integer in ",(0,s.jsxs)(r.span,{className:"katex",children:[(0,s.jsx)(r.span,{className:"katex-mathml",children:(0,s.jsx)(r.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(r.semantics,{children:[(0,s.jsxs)(r.mrow,{children:[(0,s.jsx)(r.mi,{children:"m"}),(0,s.jsx)(r.mi,{mathvariant:"normal",children:"/"}),(0,s.jsxs)(r.msup,{children:[(0,s.jsx)(r.mi,{children:"s"}),(0,s.jsx)(r.mn,{children:"2"})]}),(0,s.jsx)(r.mo,{children:"\u2217"}),(0,s.jsx)(r.mn,{children:"10"})]}),(0,s.jsx)(r.annotation,{encoding:"application/x-tex",children:"m/s^2*10"})]})})}),(0,s.jsxs)(r.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(r.span,{className:"base",children:[(0,s.jsx)(r.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"m"}),(0,s.jsx)(r.span,{className:"mord",children:"/"}),(0,s.jsxs)(r.span,{className:"mord",children:[(0,s.jsx)(r.span,{className:"mord mathnormal",children:"s"}),(0,s.jsx)(r.span,{className:"msupsub",children:(0,s.jsx)(r.span,{className:"vlist-t",children:(0,s.jsx)(r.span,{className:"vlist-r",children:(0,s.jsx)(r.span,{className:"vlist",style:{height:"0.8141em"},children:(0,s.jsxs)(r.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(r.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(r.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(r.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,s.jsx)(r.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.jsx)(r.span,{className:"mbin",children:"\u2217"}),(0,s.jsx)(r.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,s.jsxs)(r.span,{className:"base",children:[(0,s.jsx)(r.span,{className:"strut",style:{height:"0.6444em"}}),(0,s.jsx)(r.span,{className:"mord",children:"10"})]})]})]})]}),(0,s.jsx)(r.h4,{id:"example-26",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_accel_ex.png",width:"400px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_pos",children:"get_pos()"}),(0,s.jsx)(r.h4,{id:"block-27",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_pos.png",width:"230px"}),(0,s.jsx)(r.h4,{id:"code-26",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_pos()"}),(0,s.jsx)(r.h4,{id:"parameters-27",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_pos_params1.png",width:"230px"}),(0,s.jsx)("br",{}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_pos_params2.png",width:"250px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"axis:"})," x, y, z",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"unit:"})," mm, cm, in, m"]}),(0,s.jsx)(r.h4,{id:"description-27",children:"Description"}),(0,s.jsx)(r.p,{children:"Returns the current estimated position of the CoDrone EDU using the optical flow sensor."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/topdown_xy.png",width:"350px"}),(0,s.jsx)("br",{}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/xyz.jpg",width:"350px"}),(0,s.jsx)(r.h4,{id:"returns-27",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"position:"})," float x,y, or z value in units selected"]}),(0,s.jsx)(r.h4,{id:"example-27",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_pos_ex.png",width:"450px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_battery",children:"get_battery()"}),(0,s.jsx)(r.h4,{id:"block-28",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_battery.png",width:"120px"}),(0,s.jsx)(r.h4,{id:"code-27",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_battery()"}),(0,s.jsx)(r.h4,{id:"parameters-28",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-28",children:"Description"}),(0,s.jsx)(r.p,{children:"This function returns the current battery percentage of the drone battery."}),(0,s.jsx)(r.h4,{id:"returns-28",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"battery percentage:"})," positive integer from 0 to 100"]}),(0,s.jsx)(r.h4,{id:"example-28",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_battery_example.png",width:"160px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_height",children:"get_height()"}),(0,s.jsx)(r.h4,{id:"block-29",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_height.png",width:"180px"}),(0,s.jsx)(r.h4,{id:"code-28",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_height()"}),(0,s.jsx)(r.h4,{id:"parameters-29",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_height_params.png",width:"200px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"units:"})," cm, in, mm, m"]}),(0,s.jsx)(r.h4,{id:"description-29",children:"Description"}),(0,s.jsx)(r.p,{children:'Returns the calculated distance from the bottom infrared (IR) range sensor to the surface. The sensor range is up to 1.5m. This is another name for the get_range("bottom") function.'}),(0,s.jsx)(r.h4,{id:"returns-29",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"height:"})," float height value in the units selected"]}),(0,s.jsx)(r.h4,{id:"example-29",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_height_example.png",width:"240px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_pressure",children:"get_pressure()"}),(0,s.jsx)(r.h4,{id:"block-30",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_pressure.png",width:"200px"}),(0,s.jsx)(r.h4,{id:"code-29",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_pressure()"}),(0,s.jsx)(r.h4,{id:"parameters-30",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_pressure_params.png",width:"220px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"unit:"})," pascal or millibar"]}),(0,s.jsx)(r.h4,{id:"description-30",children:"Description"}),(0,s.jsxs)(r.p,{children:["This function returns barometer data in either pascals or millibars.",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Note:"})," 1 mbar = 100 Pa"]}),(0,s.jsx)(r.h4,{id:"returns-30",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"pressure:"})," float value in either Pa or mbar"]}),(0,s.jsx)(r.h4,{id:"example-30",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_pressure_example.png",width:"280px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_temperature",children:"get_temperature()"}),(0,s.jsx)(r.h4,{id:"block-31",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_temperature.png",width:"300px"}),(0,s.jsx)(r.h4,{id:"code-30",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_temperature()"}),(0,s.jsx)(r.h4,{id:"parameters-31",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_temperature_params.png",width:"300px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"unit:"})," Fahrenheit, Celsius, Kelvin"]}),(0,s.jsx)(r.h4,{id:"description-31",children:"Description"}),(0,s.jsx)(r.p,{children:"This block returns the current temperature of the drone in either Celsius or Fahrenheit."}),(0,s.jsx)(r.h4,{id:"returns-31",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"temperature:"})," float value in degrees"]}),(0,s.jsx)(r.h4,{id:"example-31",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_temperature_example.png",width:"380px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_elevation",children:"get_elevation()"}),(0,s.jsx)(r.h4,{id:"block-32",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_elevation.png",width:"220px"}),(0,s.jsx)(r.h4,{id:"code-31",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_elevation()"}),(0,s.jsx)(r.h4,{id:"parameters-32",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_elevation_parameters.png",width:"250px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"unit:"})," m (meter), km (kilometer), ft (feet), mi (miles)."]}),(0,s.jsx)(r.h4,{id:"description-32",children:"Description"}),(0,s.jsx)(r.p,{children:"Returns the estimated elevation data from the CoDrone EDU's barometer."}),(0,s.jsx)(r.h4,{id:"returns-32",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"elevation:"})," float elevation value in units selected"]}),(0,s.jsx)(r.h4,{id:"example-32",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_elevation_example.png",width:"260px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_color",children:"get_color()"}),(0,s.jsx)(r.h4,{id:"block-33",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_color.png",width:"210px"}),(0,s.jsx)(r.h4,{id:"code-32",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_color()"}),(0,s.jsx)(r.h4,{id:"parameters-33",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_color_params.png",width:"230px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"type:"})," front, back"]}),(0,s.jsx)(r.h4,{id:"description-33",children:"Description"}),(0,s.jsx)(r.p,{children:"This functions reads the color data from either of the two bottom color sensors and returns one of the 8 pre-calibrated colors (provided in the color cards). The drone must be flat on a surface (not flying) for the color sensor to activate."}),(0,s.jsx)(r.h4,{id:"returns-33",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"color:"})," detected color as a string (Red, Green, Yellow, Blue, Cyan, Magenta, Black, White, Unknown)"]}),(0,s.jsx)(r.h4,{id:"example-33",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_color_data_ex.png",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_hsvl",children:"get_hsvl()"}),(0,s.jsx)(r.h4,{id:"block-34",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_hsvl.png",width:"250px"}),(0,s.jsx)(r.h4,{id:"code-33",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_hsvl()"}),(0,s.jsx)(r.h4,{id:"parameters-34",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_hsvl_params1.png",width:"250px"}),(0,s.jsx)("br",{}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_hsvl_params2.png",width:"270x"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"type:"})," front, back",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"unit:"})," hue, saturation, value, lightness"]}),(0,s.jsx)(r.h4,{id:"description-34",children:"Description"}),(0,s.jsx)(r.p,{children:"Returns the HSVL (hue, saturation, value, lightness) data from either of the CoDrone EDU's bottom color sensors. The drone must be flat on a surface (not flying) for the color sensor to activate."}),(0,s.jsx)(r.h4,{id:"returns-34",children:"Returns"}),(0,s.jsx)(r.p,{children:"hsvl value from sensor"}),(0,s.jsx)(r.h4,{id:"example-34",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_hsvl_ex.png",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"get_state_data",children:"get_state_data()"}),(0,s.jsx)(r.h4,{id:"block-35",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_state_data.png",width:"280x"}),(0,s.jsx)(r.h4,{id:"code-34",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"get_state_data()"}),(0,s.jsx)(r.h4,{id:"parameters-35",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_state_data_params.png",width:"280px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"unit:"})," modeFlight, modeMovement"]}),(0,s.jsx)(r.h4,{id:"description-35",children:"Description"}),(0,s.jsx)(r.p,{children:"Returns the current state of the CoDrone EDU."}),(0,s.jsx)(r.h4,{id:"returns-35",children:"Returns"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"state:"})," name of flight/movement state"]}),(0,s.jsx)(r.h4,{id:"example-35",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/get_state_data_ex.png",width:"320px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"reset_sensor",children:"reset_sensor()"}),(0,s.jsx)(r.h4,{id:"block-36",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/reset_sensor.png",width:"160px"}),(0,s.jsx)(r.h4,{id:"code-35",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"reset_sensor()"}),(0,s.jsx)(r.h4,{id:"parameters-36",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-36",children:"Description"}),(0,s.jsx)(r.p,{children:"Resets the Gyroscope angles to 0. Make sure the drone is on a flat surface when running this block."}),(0,s.jsx)(r.h4,{id:"returns-36",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-36",children:"Example"}),(0,s.jsx)(r.p,{children:"To use this example file turn the drone manually with your hand and watch the Z angle change. Stop moving the drone during the reset. You will see that the Z angle is reset to 0."}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/reset_sensor_ex.png",width:"280px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h2,{id:"sound",children:"Sound"}),(0,s.jsx)(r.h3,{id:"drone_buzzer",children:"drone_buzzer()"}),(0,s.jsx)(r.h4,{id:"block-37",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_buzzer.PNG",width:"500px"}),(0,s.jsx)(r.h4,{id:"code-36",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"buzzer()"}),(0,s.jsx)(r.h4,{id:"parameters-37",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_buzzer_params.PNG",width:"500px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"note:"})," note range from C3 to B7, Mute, Fin",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"duration:"})," positive integer in milliseconds"]}),(0,s.jsx)(r.h4,{id:"description-37",children:"Description"}),(0,s.jsx)(r.p,{children:"Plays a note for a duration in milliseconds using the CoDrone EDU drone buzzer."}),(0,s.jsx)(r.h4,{id:"returns-37",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-37",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_buzzer_example.PNG",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_buzzer",children:"controller_buzzer()"}),(0,s.jsx)(r.h4,{id:"block-38",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_buzzer.PNG",width:"500px"}),(0,s.jsx)(r.h4,{id:"code-37",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_buzzer()"}),(0,s.jsx)(r.h4,{id:"parameters-38",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_buzzer_params.PNG",width:"500px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"note:"})," note range from C3 to B7, Mute, Fin",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"duration:"})," positive integer in milliseconds"]}),(0,s.jsx)(r.h4,{id:"description-38",children:"Description"}),(0,s.jsx)(r.p,{children:"Plays a note for a duration in milliseconds using the CoDrone EDU controller buzzer."}),(0,s.jsx)(r.h4,{id:"returns-38",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-38",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_buzzer_example.PNG",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"drone_buzzer_hertz",children:"drone_buzzer_hertz()"}),(0,s.jsx)(r.h4,{id:"block-39",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/drone_buzzer_hertz.PNG",width:"500px"}),(0,s.jsx)(r.h4,{id:"code-38",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"drone_buzzer_hertz()"}),(0,s.jsx)(r.h4,{id:"parameters-39",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"hertz:"})," any positive integer in Hertz",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"duration:"})," positive integer in milliseconds"]}),(0,s.jsx)(r.h4,{id:"description-39",children:"Description"}),(0,s.jsx)(r.p,{children:"Plays a sound frequency for a duration in milliseconds using the CoDrone EDU drone buzzer."}),(0,s.jsx)(r.h4,{id:"returns-39",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-39",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/hertz_example.PNG",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_buzzer_hertz",children:"controller_buzzer_hertz()"}),(0,s.jsx)(r.h4,{id:"block-40",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_buzzer_hertz.PNG",width:"500px"}),(0,s.jsx)(r.h4,{id:"code-39",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_buzzer_hertz()"}),(0,s.jsx)(r.h4,{id:"parameters-40",children:"Parameters"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"hertz:"})," any positive integer in Hertz",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"duration:"})," positive integer in milliseconds"]}),(0,s.jsx)(r.h4,{id:"description-40",children:"Description"}),(0,s.jsx)(r.p,{children:"Plays a sound frequency for a duration in milliseconds using the CoDrone EDU controller buzzer."}),(0,s.jsx)(r.h4,{id:"returns-40",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-40",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior//hertz_example.PNG",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h2,{id:"screen",children:"Screen"}),(0,s.jsx)(r.h3,{id:"controller_draw_line",children:"controller_draw_line()"}),(0,s.jsx)(r.admonition,{type:"warning",children:(0,s.jsx)(r.p,{children:"This function is currently unavailable for CoDrone EDU (JROTC ed.)."})}),(0,s.jsx)(r.h4,{id:"block-41",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_line.png",width:"450px"}),(0,s.jsx)(r.h4,{id:"code-40",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_draw_line()"}),(0,s.jsx)(r.h4,{id:"parameters-41",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_line_params.png",width:"450px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"x1:"})," point 1 x coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"y1:"})," point 1 y coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"x2:"})," point 2 x coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"y2:"})," point 2 y coordinate"]}),(0,s.jsx)(r.h4,{id:"description-41",children:"Description"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"(x1,y1) \\\r\n         \\\r\n          \\\r\n           \\ (x2,y2)\n"})}),(0,s.jsx)(r.p,{children:"Draws a line between points (x1, y1) and (x2, y2)"}),(0,s.jsx)(r.h4,{id:"returns-41",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-41",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_line_example.png",width:"450px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_draw_string",children:"controller_draw_string()"}),(0,s.jsx)(r.admonition,{type:"warning",children:(0,s.jsx)(r.p,{children:"This function is currently unavailable for CoDrone EDU (JROTC ed.)."})}),(0,s.jsx)(r.h4,{id:"block-42",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_string.png",width:"450px"}),(0,s.jsx)(r.h4,{id:"code-41",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_draw_string()"}),(0,s.jsx)(r.h4,{id:"parameters-42",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_string_params.png",width:"450px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"xStart:"})," starting x position",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"yStart:"})," starting y position",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"text:"})," any string input"]}),(0,s.jsx)(r.h4,{id:"description-42",children:"Description"}),(0,s.jsx)(r.p,{children:"Draws a string from the given x_start, x_end and y positions. The string can be aligned along the x_start and x_end positions"}),(0,s.jsx)(r.h4,{id:"returns-42",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-42",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_string_example.png",width:"450px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_draw_rectangle",children:"controller_draw_rectangle()"}),(0,s.jsx)(r.admonition,{type:"warning",children:(0,s.jsx)(r.p,{children:"This function is currently unavailable for CoDrone EDU (JROTC ed.)."})}),(0,s.jsx)(r.h4,{id:"block-43",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_rectangle.png",width:"550px"}),(0,s.jsx)(r.h4,{id:"code-42",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_draw_rectangle()"}),(0,s.jsx)(r.h4,{id:"parameters-43",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_rectangle_params.png",width:"550px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"xStart:"})," top left corner x coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"yStart:"})," top left corner y coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"width:"})," width of rectangle",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"height:"})," height of rectangle",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"flagFill:"})," optional parameter to fill in the rectangle or not. default value is False"]}),(0,s.jsx)(r.h4,{id:"description-43",children:"Description"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:" width\r\n(x,y)|---------------|\r\n     |               | height\r\n     |_______________|\n"})}),(0,s.jsx)(r.p,{children:"Draws a rectangle onto the controller screen starting from point (x,y) and extends to given height and width"}),(0,s.jsx)(r.h4,{id:"returns-43",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-43",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_rectangle_example.png",width:"550px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_draw_square",children:"controller_draw_square()"}),(0,s.jsx)(r.admonition,{type:"warning",children:(0,s.jsx)(r.p,{children:"This function is currently unavailable for CoDrone EDU (JROTC ed.)."})}),(0,s.jsx)(r.h4,{id:"block-44",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_square.png",width:"500px"}),(0,s.jsx)(r.h4,{id:"code-43",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_draw_square()"}),(0,s.jsx)(r.h4,{id:"parameters-44",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_square_params.png",width:"500px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"xStart:"})," top left corner x coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"yStart:"})," top left corner y coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"width:"})," width of square",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"flagFill:"})," optional parameter to fill in the square or not. default value is False"]}),(0,s.jsx)(r.h4,{id:"description-44",children:"Description"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"width\r\n(x,y)|------|\r\n     |      | width\r\n     |______|\n"})}),(0,s.jsx)(r.p,{children:"Draws a square on the controller screen starting from point (x,y) and will extend to the given width"}),(0,s.jsx)(r.h4,{id:"returns-44",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-44",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_square_example.png",width:"500px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_draw_point",children:"controller_draw_point()"}),(0,s.jsx)(r.admonition,{type:"warning",children:(0,s.jsx)(r.p,{children:"This function is currently unavailable for CoDrone EDU (JROTC ed.)."})}),(0,s.jsx)(r.h4,{id:"block-45",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_point.png",width:"350px"}),(0,s.jsx)(r.h4,{id:"code-44",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_draw_point()"}),(0,s.jsx)(r.h4,{id:"parameters-45",children:"Parameters"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_point_params.png",width:"350px"}),(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"x:"})," x coordinate",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"y:"})," y coordinate"]}),(0,s.jsx)(r.h4,{id:"description-45",children:"Description"}),(0,s.jsx)(r.p,{children:"Draws a point on the CoDrone EDU LED screen at point (x, y)."}),(0,s.jsx)(r.h4,{id:"returns-45",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-45",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_draw_point_example.png",width:"350px"}),(0,s.jsx)("hr",{}),(0,s.jsx)(r.h3,{id:"controller_clear_screen",children:"controller_clear_screen()"}),(0,s.jsx)(r.admonition,{type:"warning",children:(0,s.jsx)(r.p,{children:"This function is currently unavailable for CoDrone EDU (JROTC ed.)."})}),(0,s.jsx)(r.h4,{id:"block-46",children:"Block"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_clear_screen.png",width:"220px"}),(0,s.jsx)(r.h4,{id:"code-45",children:"Code"}),(0,s.jsx)("span",{className:"light_gray",children:"drone."}),(0,s.jsx)("span",{className:"dark_gray",children:"controller_clear_screen()"}),(0,s.jsx)(r.h4,{id:"parameters-46",children:"Parameters"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"description-46",children:"Description"}),(0,s.jsx)(r.p,{children:"Clears the CoDrone EDU controller screen."}),(0,s.jsx)(r.h4,{id:"returns-46",children:"Returns"}),(0,s.jsx)(r.p,{children:"None"}),(0,s.jsx)(r.h4,{id:"example-46",children:"Example"}),(0,s.jsx)("img",{src:"/img/CDE/blockly_docu/senior/controller_clear_screen_example.png",width:"600px"}),(0,s.jsx)("hr",{})]})}function h(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,r,l)=>{l.d(r,{Z:()=>a,a:()=>d});var s=l(7294);const i={},n=s.createContext(i);function d(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(n.Provider,{value:r},e.children)}}}]);